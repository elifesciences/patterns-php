elifeLibrary {
    def branch = "update_pattern_library_${env.BUILD_NUMBER}"
    stage 'Checkout and branch', {
        checkout scm
        sh "git checkout -b ${branch}"
    }

    def shortDescription
    stage "Update", {
        sh "bin/update || echo bin/update FAILED"
        def patternLibraryCommit = sh(script: "cd pattern-library; git rev-parse HEAD", returnStdout: true).trim()
        def patternLibraryMessage = sh(script: "cd pattern-library; git log -1 --pretty='%B' | head -n 1", returnStdout: true).trim()
        shortDescription = "Updated pattern-library to ${patternLibraryCommit}: ${patternLibraryMessage}"
        writeFile(file: "pattern-library-short-description.log", text:shortDescription)
        sh "git add ."
        sh "git commit -F pattern-library-short-description.log"
    }

    stage 'Push and pull-request', {
        def longDescription = shortDescription + "\n\n" + env.BUILD_URL
        writeFile(file: "pattern-library-long-description.log", text: longDescription)
        sh "git push origin ${branch}"
        sh "hub pull-request -F pattern-library-long-description.log"
    }
}
