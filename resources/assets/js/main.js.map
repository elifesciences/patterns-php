{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/components/AllSubjectsListLink.js","main.js","assets/js/components/ArticleDownloadLinksList.js","assets/js/components/ArticleSection.js","assets/js/components/AudioPlayer.js","assets/js/components/BackgroundImage.js","assets/js/components/Carousel.js","assets/js/components/ContentHeaderArticle.js","assets/js/components/FragmentHandler.js","assets/js/components/MainMenu.js","assets/js/components/Math.js","assets/js/components/MediaChapterListingItem.js","assets/js/components/SearchBox.js","assets/js/components/SelectNav.js","assets/js/components/SiteHeader.js","assets/js/components/ViewSelector.js","assets/js/components/ViewerModal.js","assets/js/libs/elife-utils.js","assets/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_classCallCheck","instance","Constructor","TypeError","AllSubjectsListLink","$elm","doc","arguments","undefined","window","document","this","targetFragmentId","href","substring","indexOf","$target","querySelector","$parent","parentNode","insertBefore","removeChild","2","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","utils","ArticleDownloadLinksList","_window","classList","add","moveList","$toggler","addEventListener","toggle","bind","value","$newParent","$followingSibling","nextElementSibling","preventDefault","stopPropagation","isOpen","close","open","contains","remove","checkForClose","areElementsNested","removeEventListener","../libs/elife-utils","3","ArticleSection","thresholdWidth","initialise","$headerLink","createHeaderLink","$body","setInitialState","expand","$header","$link","createElement","setAttribute","appendChild","firstElementChild","toggleState","dataset","initialState","viewportNoWiderThan","thresholdInPx","matchMedia","matches","MathJax","Hub","Queue","id","$descendentEl","detail","scrollIntoView","4","AudioPlayer","_this","HTMLAudioElement","console","log","$audioElement","uniqueId","uniqueIds","get","$playButton","buildPlayButton","$icon","$title","prepare$title","$progressTrack","buildProgressIndicator","$progressBar","$timeIndicators","buildTimeIndicators","$currentTime","$duration","duration","isPlaying","playerReady","usingMetadata","loadMetadata","episodeNumber","warn","player","innerHTML","secondsToMinutes","togglePlay","update","seekNewTime","CustomEvent","createEvent","initCustomEvent","dispatchEvent","parent","span","$togglePlayButton","pause","play","updateIconState","currentTime","Math","floor","pc","currentTime2Dis","style","width","chapterNumberOnLastUpdate","getCurrentChapterNumber","setCurrentChapterMetadata","getChapterMetadataAtTime","chapterMetadata","getCurrentChapterMetadata","number","changeChapter","title","ended","setTitle","episodeTitle","chapterChanged","hash","shouldPlay","newURL","location","isNaN","seek","newSeekPosition","parseInt","offsetX","availableWidth","clientWidth","durationProportionToSeek","time","chapterTitle","currentChapterMetadata","metadata","chapterNumber","forEach","chapter","chapters","chapterStartTime","nextChapterStartTime","prepareChapterMetadata","push","processMetadata","JSON","parse","replace","error","seconds","_seconds","mins","secs","state","src","getIconPath","alt","$barWrapper","buildElement","handleSeek","$button","$image","playerId","$container","iconName","5","BackgroundImage","sourceToUse","isValidThreshold","isThresholdMet","innerWidth","resizeHandler","init","calcSourceToUse","isHighDpr","setDarkBackground","setupEventHandlers","setLightBackground","candidate","Array","isArray","threshold","viewportWidth","getAttribute","backgroundImage","getBackgroundImagesString","color","path","grandient","sourceDefiner","lowResSource","highResSource","highResImageSource","lowResImageSource","6","Carousel","moveableStage","originalSlideWrappers","querySelectorAll","originalSlideCount","currentSlideCount","currentSlide","timerInterval","buildVisibleControls","buildControl$toggle","updateWidth","updateControlPanel","focus","handleKey","cancelTimer","setupTimer","adjustTranslateForResize","makeSingleSlideATVisible","$node","removeAttribute","$root","show","_this2","action","atShow","atHide","childNodes","$descendant","nodeType","ELEMENT_NODE","hasChildNodes","setATVisibility","slideNumber","_this3","$el","_slideNumber","slide","$previousWrapper","buildControl$traverser","$nextWrapper","buttons","previous","next","switches","buildControl$switches","$controlPanel","$visibleControlsWrapper","visibleControls","control","direction","_this4","_direction","text","$wrapper","userInitiatedProgression","_this5","quantity","$switches","buildControl$switch","activateSwitch","index","$item","$switch","currentButtonState","timerStopped","clearInterval","timer","_this6","startNewAdvancementTimer","intervalInMs","_this7","setInterval","keyCode","charCode","callback","extendStage","updateSlide","_this8","cloneNode","currentOffset","getCurrentOffset","currentWidthStringMatch","getComputedStyle","match","currentCarouselWidth","newOffset","updateElementTranslate","offsetStringMatch","transform","hideInvalidButtonChoice","updateActiveSwitch","logicalSlideNumber","getLogicalSlideNumber","currentLogicalSlide","aSwitch","actualSlideNumber","setSize","slideSetOfSlide","ceil","firstSlideOfSet","logicalSlideRequested","logicalSlideCurrent","slideOffset","abs","carouselWidth","expectedOffset","adjustPxString","7","ContentHeaderArticle","breakpointInPx","currentView","calcCurrentView","authors","institutions","hasToggleAuthor","hasToggleInstitution","hideAllExcessItems","newView","handleAnyExcessItems","itemType","items","clearExcessMark","toggleExcessItems","excessItems","getExcessItems","markAsExcess","markLastNonExcessItem","addTrailingText","defaultMaxItems","getDefaultMaxItems","slice","els","item","breakpoint","lastShownIndex","foundLastShown","lastShown","buildSeeMoreLessToggle","toggleOnText","toggleOffText","8","FragmentHandler","handleDomLoad","handleSectionOpeningViaHash","$section","$fragWithId","idToFind","collapsedSections","$collapsedSectionContainingFrag","$collapsedSection","isIdOfOrWithinSection","idOfCollapsedSection","getIdOfCollapsedSection","expandSection","9","MainMenu","$globalWrapper","10","loadDependencies","dependenciesAlreadySetup","setupProperties","load","HTML-CSS","linebreaks","automatic","SVG","resizeTimeout","resizeThrottler","setTimeout","script","type","setupResizeHandler","11","MediaChapterListingItem","startTime","listenForChapterChange","createLink","$player","indicateChapterChanged","$rootElm","titleText","$existingLink","currentChapterNumber","12","SearchBox","$form","$input","$limit","$searchButton","$resetButton","$inner","isSearchLimited","checked","$output","handleKeyEntry","useSuggestion","keywords","reset","showResetButton","setKeywords","hideResetButton","current","previousElementSibling","submit","searchTerm","filter","keyword","toLowerCase","sort","embolden","outputString","nudgeOutputVertically","posnInPx","posn","searchBox","nextSuggestion","prevSuggestion","display","filterKeywordsBySearchTerm","getKeywords","phrase","snippet","snippetRx","RegExp","toEmbolden","13","SelectNav","triggerSubmit","14","SiteHeader","$searchBoxEl","searchToggle","toggleSearchBox","$pageOverlay","mainMenu","$mainMenuToggle","moveWithinDom","toggleMainMenu","checkForMenuClose","searchBoxIsOpen","closeSearchBox","openSearchBox","blur","hidePageOverlay","myHeight","height","adjustment","offsetY","transitionDurationInMs","invertPxString","showPageOverlay","className","createPageOverlay","getBoundingClientRect","./MainMenu","./SearchBox","15","ViewSelector","$jumpLinks","$jumpLinksToggle","cssFixedClassName","mainTarget","topSpaceWhenFixed","elmYOffset","offsetTop","handleScroll","toggleJumpLinks","pageYOffset","bottomOfMain","bottom","offsetHeight","amountToNudgeUp","top","innerHeight","16","ViewerModal","$prev","$next","build","prev","17","elName","cssClasses","textContent","attachBefore","HTMLElement","cssClass","offset","calcOffset","prop","_getValueFromPxString","pxString","_getZeroAwarePxStringFromValue","requestedOperation","originalSize","adjustedSize","operation","$prospectiveParent","$prospectiveDescendant","Node","relationship","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","devicePixelRatio","UniqueIdentifiers","used","prefix","_prefix","random","isValid","18","localStorage","Components","Elife","initialiseComponent","$component","handlers","trim","split","handler","singletons","isRegistered","isSingleton","register","componentName","registered","components","./components/AllSubjectsListLink","./components/ArticleDownloadLinksList","./components/ArticleSection","./components/AudioPlayer","./components/BackgroundImage","./components/Carousel","./components/ContentHeaderArticle","./components/FragmentHandler","./components/MainMenu","./components/Math","./components/MediaChapterListingItem","./components/SearchBox","./components/SelectNav","./components/SiteHeader","./components/ViewSelector","./components/ViewerModal"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nmodule.exports = class AllSubjectsListLink {\n\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.doc = doc;\n    this.$elm = $elm;\n\n    this.targetFragmentId = this.$elm.href.substring(this.$elm.href.indexOf('#'));\n    let $target = this.doc.querySelector(this.targetFragmentId);\n    let $parent = this.$elm.parentNode;\n    $parent.insertBefore($target, this.$elm);\n    $parent.removeChild(this.$elm);\n  }\n\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function AllSubjectsListLink($elm) {\n  var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n  var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n  _classCallCheck(this, AllSubjectsListLink);\n\n  if (!$elm) {\n    return;\n  }\n\n  this.doc = doc;\n  this.$elm = $elm;\n\n  this.targetFragmentId = this.$elm.href.substring(this.$elm.href.indexOf('#'));\n  var $target = this.doc.querySelector(this.targetFragmentId);\n  var $parent = this.$elm.parentNode;\n  $parent.insertBefore($target, this.$elm);\n  $parent.removeChild(this.$elm);\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = function () {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  function ArticleDownloadLinksList($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, ArticleDownloadLinksList);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    // One statement per class name because IE doesn't support multiple strings, comma separated.\n    this.$elm.classList.add('article-download-links-list--js');\n    this.$elm.classList.add('visuallyhidden');\n    this.moveList();\n    this.$toggler = this.doc.querySelector('.content-header__download_link');\n    this.$toggler.addEventListener('click', this.toggle.bind(this));\n  }\n\n  /**\n   * Moves the download links list to be by the icon this.$toggler\n   */\n\n\n  _createClass(ArticleDownloadLinksList, [{\n    key: 'moveList',\n    value: function moveList() {\n      var $newParent = this.doc.querySelector('.content-header_top');\n      var $followingSibling = $newParent.querySelector('.content-header__download_link').nextElementSibling;\n      this.$elm.parentNode.parentNode.classList.add('visuallyhidden');\n      $newParent.insertBefore(this.$elm, $followingSibling);\n    }\n\n    /**\n     * Toggles the download links list display.\n     *\n     * @param e The event triggering the display toggle\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * Returns whether links list is currently viewable.\n     *\n     * @returns {boolean} Whether links list is currently viewable\n     */\n\n  }, {\n    key: 'isOpen',\n    value: function isOpen() {\n      return !this.$elm.classList.contains('visuallyhidden');\n    }\n\n    /**\n     * Make viewable.\n     */\n\n  }, {\n    key: 'open',\n    value: function open() {\n      this.$elm.classList.remove('visuallyhidden');\n      this.window.addEventListener('click', this.checkForClose.bind(this));\n    }\n\n    /**\n     * Checks whether a click occurred outside this, and close this if it did.\n     *\n     * @param e The click event to evaluate the target of\n     */\n\n  }, {\n    key: 'checkForClose',\n    value: function checkForClose(e) {\n      if (!utils.areElementsNested(this.$elm, e.target)) {\n        this.close();\n      }\n    }\n\n    /**\n     * Make unviewable.\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      this.$elm.classList.add('visuallyhidden');\n      this.window.removeEventListener('click', this.checkForClose.bind(this));\n    }\n  }]);\n\n  return ArticleDownloadLinksList;\n}();\n\n},{\"../libs/elife-utils\":17}],3:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function ArticleSection($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, ArticleSection);\n\n    if ($elm.classList.contains('article-section--first')) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n\n    this.thresholdWidth = 600;\n    this.initialise(this.$elm, doc);\n  }\n\n  _createClass(ArticleSection, [{\n    key: 'initialise',\n    value: function initialise($elm, doc) {\n      this.$elm.classList.add('article-section--js');\n      this.$headerLink = this.createHeaderLink($elm, doc);\n      this.$body = $elm.querySelector('.article-section__body');\n      this.setInitialState($elm, this.$headerLink, this.$body);\n      this.$elm.addEventListener('expandsection', this.expand.bind(this));\n    }\n  }, {\n    key: 'createHeaderLink',\n    value: function createHeaderLink($elm, doc) {\n      var $header = $elm.querySelector('.article-section__header');\n      var $link = doc.createElement('A');\n      $link.setAttribute('href', '#');\n      $link.classList.add('article-section__header_link');\n      $link.appendChild($header.firstElementChild);\n      $header.appendChild($link);\n      $link.addEventListener('click', this.toggleState.bind(this));\n      return $link;\n    }\n  }, {\n    key: 'setInitialState',\n    value: function setInitialState($elm, $headerLink, $body) {\n      if ($elm.dataset.initialState === 'closed' || this.viewportNoWiderThan(this.thresholdWidth)) {\n        $elm.classList.add('article-section--collapsed');\n        $headerLink.classList.add('article-section__header_link--closed');\n        $body.classList.add('visuallyhidden');\n      } else {\n        // Defensive: remove classes if they turn up here when they shouldn't\n        $headerLink.classList.remove('article-section__header_link--closed');\n        $body.classList.remove('visuallyhidden');\n      }\n    }\n  }, {\n    key: 'viewportNoWiderThan',\n    value: function viewportNoWiderThan(thresholdInPx) {\n      return this.window.matchMedia('(max-width: ' + thresholdInPx + 'px)').matches;\n    }\n  }, {\n    key: 'toggleState',\n    value: function toggleState(e) {\n      e.preventDefault();\n      this.$headerLink.classList.toggle('article-section__header_link--closed');\n      this.$elm.classList.toggle('article-section--collapsed');\n      this.$body.classList.toggle('visuallyhidden');\n      if (!this.$body.classList.contains('visuallyhidden') && !!this.window.MathJax) {\n        this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub, this.$elm.id]);\n      }\n    }\n  }, {\n    key: 'expand',\n    value: function expand(e) {\n      this.$headerLink.classList.remove('article-section__header_link--closed');\n      this.$elm.classList.remove('article-section--collapsed');\n      this.$body.classList.remove('visuallyhidden');\n      if (!!this.window.MathJax) {\n        this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub, this.$elm.id]);\n      }\n\n      var $descendentEl = this.doc.querySelector('#' + e.detail);\n      if (!!$descendentEl) {\n        $descendentEl.scrollIntoView();\n      }\n    }\n  }]);\n\n  return ArticleSection;\n}();\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\nmodule.exports = function () {\n  function AudioPlayer($elm) {\n    var _this = this;\n\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, AudioPlayer);\n\n    if (!$elm) {\n      console.warn('No element provided');\n      return;\n    }\n\n    this.window = _window;\n    if (!this.window.HTMLAudioElement) {\n      console.warn('Audio element not supported');\n      return;\n    }\n\n    console.log('Initialising Audio Player...');\n\n    this.$elm = $elm;\n    this.$audioElement = this.$elm.querySelector('audio');\n    if (!this.$audioElement) {\n      console.warn('No audio element found');\n      return;\n    }\n\n    this.uniqueId = utils.uniqueIds.get('audio', doc);\n    this.$elm.id = this.uniqueId;\n    this.$playButton = AudioPlayer.buildPlayButton(this);\n    this.$icon = this.$playButton.querySelector('.audio-player__toggle_play_icon');\n\n    // $title must be prepared before buildProgressIndicator is called\n    this.$title = this.prepare$title(this.$elm.querySelector('.audio-player__header'), doc);\n    this.$progressTrack = AudioPlayer.buildProgressIndicator(this);\n    this.$progressBar = this.$progressTrack.querySelector('[class*=\"progress_bar\"]');\n    this.$timeIndicators = AudioPlayer.buildTimeIndicators(this);\n    this.$currentTime = this.$timeIndicators.querySelector('[class*=\"current_time\"]');\n    this.$duration = this.$timeIndicators.querySelector('[class*=\"duration\"]');\n\n    // state\n    this.duration = null;\n    this.isPlaying = false;\n\n    this.$elm.classList.add('audio-player--js');\n\n    this.$playButton.classList.add('loading');\n    this.$audioElement.addEventListener('loadedmetadata', function () {\n      _this.playerReady(_this);\n    });\n\n    this.usingMetadata = false; // set to true in loadMetadata if no errors thrown\n    this.loadMetadata(this.$elm.dataset.episodeNumber);\n  }\n\n  _createClass(AudioPlayer, [{\n    key: 'playerReady',\n    value: function playerReady(player) {\n      player.duration = player.$audioElement.duration;\n      player.$duration.innerHTML = AudioPlayer.secondsToMinutes(player.duration);\n      player.$playButton.addEventListener('click', function () {\n        player.togglePlay(player.$audioElement, player.$playButton);\n      }, false);\n      player.$audioElement.addEventListener('timeupdate', player.update.bind(player));\n      player.window.addEventListener('hashchange', player.seekNewTime.bind(player));\n      player.window.addEventListener('load', player.seekNewTime.bind(player));\n      this.$playButton.classList.remove('loading');\n\n      var playerReady = void 0;\n      try {\n        playerReady = new CustomEvent('playerReady', { detail: this.uniqueId });\n      } catch (e) {\n        // CustomEvent not supported, do it the old fashioned way\n        playerReady = document.createEvent('playerReady');\n        playerReady.initCustomEvent('playerReady', true, true, { detail: this.uniqueId });\n      }\n\n      player.window.dispatchEvent(playerReady);\n    }\n  }, {\n    key: 'prepare$title',\n    value: function prepare$title(parent, doc) {\n      var span = doc.createElement('span');\n      try {\n        span.innerHTML = parent.innerHTML;\n      } catch (e) {\n        return;\n      }\n\n      span.classList.add('audio-player__title');\n      parent.innerHTML = '';\n      parent.appendChild(span);\n      return span;\n    }\n\n    /**\n     * Converts seconds to a display of minutes & seconds.\n     *\n     * @param {Number} seconds The time to convert, in seconds\n     * @returns {string} The time in a [m]m:ss string\n     */\n\n  }, {\n    key: 'togglePlay',\n\n\n    //noinspection JSValidateJSDoc\n    /**\n     * Toggles play/pause state of media file.\n     *\n     * @param {HTMLAudioElement} $audioElement The audio element to toggle the play state of\n     * @param {HTMLButtonElement} $togglePlayButton The button controlling the playback\n     */\n    value: function togglePlay($audioElement, $togglePlayButton) {\n      if (this.isPlaying) {\n        this.pause($audioElement, $togglePlayButton);\n      } else {\n        this.play($audioElement, $togglePlayButton);\n      }\n    }\n  }, {\n    key: 'play',\n    value: function play($audioElement, $togglePlayButton) {\n      $audioElement.play();\n      AudioPlayer.updateIconState(this.$icon, 'pause');\n      $togglePlayButton.classList.add('audio-player__toggle_play--pauseable');\n      $togglePlayButton.classList.remove('audio-player__toggle_play--playable');\n      this.isPlaying = true;\n    }\n  }, {\n    key: 'pause',\n    value: function pause($audioElement, $togglePlayButton) {\n      $audioElement.pause();\n      AudioPlayer.updateIconState(this.$icon, 'play');\n      $togglePlayButton.classList.add('audio-player__toggle_play--playable');\n      $togglePlayButton.classList.remove('audio-player__toggle_play--pauseable');\n      this.isPlaying = false;\n    }\n\n    /**\n     * Update the progress bar and elapsed time indicator based on track's current time.\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var currentTime = Math.floor(this.$audioElement.currentTime);\n      var pc = currentTime / this.duration * 100;\n      var currentTime2Dis = AudioPlayer.secondsToMinutes(currentTime);\n      this.$progressBar.style.width = pc + '%';\n      this.$currentTime.innerHTML = currentTime2Dis;\n\n      if (this.usingMetadata) {\n        var chapterNumberOnLastUpdate = this.getCurrentChapterNumber();\n        this.setCurrentChapterMetadata(this.getChapterMetadataAtTime(currentTime, this.chapterMetadata));\n        if (this.getCurrentChapterMetadata().number !== chapterNumberOnLastUpdate) {\n          this.changeChapter(this.getCurrentChapterNumber(), this.getCurrentChapterMetadata().title, this.$elm);\n        }\n      }\n\n      if (this.$audioElement.ended) {\n        AudioPlayer.updateIconState(this.$icon, 'play');\n        this.isPlaying = false;\n      }\n    }\n\n    /**\n     * Updates player title with chapter number & name, and dispatches chapterChanged event.\n     *\n     * @param {int} number New chapter number Used as value of detail property of\n     * @param {String} title new chapter title\n     * @param {HTMLElement} $elm Element from which to dispatch the event\n     */\n\n  }, {\n    key: 'changeChapter',\n    value: function changeChapter(number, title, $elm) {\n      this.setTitle(this.episodeTitle, title);\n      var chapterChanged = void 0;\n      try {\n        chapterChanged = new CustomEvent('chapterChanged', { detail: number });\n      } catch (e) {\n        // CustomEvent not supported, do it the old fashioned way\n        chapterChanged = document.createEvent('chapterChanged');\n        chapterChanged.initCustomEvent('chapterChanged', true, true, { detail: number });\n      }\n\n      $elm.dispatchEvent(chapterChanged);\n    }\n\n    /**\n     * Updates the icon state for the play button.\n     *\n     * @param $icon {HTMLImageElement} The img to update\n     * @param state {string} The state to update to (either 'play' or 'pause')\n     */\n\n  }, {\n    key: 'seekNewTime',\n    value: function seekNewTime(e) {\n      var hash;\n      var shouldPlay = false;\n      try {\n        hash = e.newURL.substring(e.newURL.indexOf('#') + 1);\n\n        // Should play when chapter changed within the page, but not autoplay on page load :-)\n        shouldPlay = true;\n      } catch (e) {\n        // newURL only available on hashchange event, but load event may also invoke this handler\n        hash = this.window.location.hash.substring(1);\n        shouldPlay = false;\n      }\n\n      if (!isNaN(hash) && hash >= 0) {\n        this.seek(hash, this.$audioElement);\n        if (!this.isPlaying && shouldPlay) {\n          this.play(this.$audioElement, this.$playButton);\n        }\n      }\n    }\n\n    /**\n     * Event handler to determine track seek time in response to user interaction.\n     *\n     * @param e The user-generated click event\n     * @param {AudioPlayer} player The audio player object that the new element belongs to\n     */\n\n  }, {\n    key: 'handleSeek',\n    value: function handleSeek(e, player) {\n      var newSeekPosition = parseInt(e.offsetX, 10);\n      var availableWidth = player.$progressTrack.clientWidth;\n      var durationProportionToSeek = newSeekPosition / parseInt(availableWidth, 10);\n      this.seek(durationProportionToSeek * player.duration, player.$audioElement);\n    }\n\n    //noinspection JSValidateJSDoc\n    /**\n     * Seeks a particular time in the media file.\n     *\n     * @param {Number} time The time to seek\n     * @param {HTMLAudioElement} $audioElement The audio element to toggle the play state of\n     */\n\n  }, {\n    key: 'seek',\n    value: function seek(time, $audioElement) {\n      $audioElement.currentTime = time;\n      this.update();\n    }\n\n    /**\n     * Builds the progress indicator.\n     *\n     * @param {AudioPlayer} player The audio player object that the new element belongs to\n     * @returns {Element} The progress indicator\n     */\n\n  }, {\n    key: 'setTitle',\n\n\n    /**\n     * Set the title based on both episode and chapter titles\n     * @param episodeTitle\n     * @param chapterTitle\n     */\n    value: function setTitle(episodeTitle, chapterTitle) {\n      this.title = episodeTitle;\n      if (!!chapterTitle) {\n        this.title += ': ' + chapterTitle;\n      }\n\n      this.$title.innerHTML = this.title;\n    }\n  }, {\n    key: 'getCurrentChapterMetadata',\n    value: function getCurrentChapterMetadata() {\n      return this.currentChapterMetadata;\n    }\n  }, {\n    key: 'setCurrentChapterMetadata',\n    value: function setCurrentChapterMetadata(metadata) {\n      this.currentChapterMetadata = metadata;\n    }\n  }, {\n    key: 'getCurrentChapterNumber',\n    value: function getCurrentChapterNumber() {\n      return this.getCurrentChapterMetadata().number || 0;\n    }\n\n    /**\n     * Returns a chapter's title and number, based on the playback position\n     * @param time\n     * @param {Array} chapterMetadata\n     * An array of objects that must contain as a minimum\n     * @returns {*}\n     */\n\n  }, {\n    key: 'getChapterMetadataAtTime',\n    value: function getChapterMetadataAtTime(time, chapterMetadata) {\n      if (!chapterMetadata) {\n        return '';\n      }\n\n      var chapterTitle = '';\n      var chapterNumber = 0;\n      chapterMetadata.forEach(function (chapter, i, chapters) {\n        var chapterStartTime = parseInt(chapter.time, 10);\n        var nextChapterStartTime = i < chapters.length - 1 ? chapters[i + 1].time : null;\n        if (time >= chapterStartTime) {\n          if (!nextChapterStartTime || time < nextChapterStartTime) {\n            chapterTitle = chapter.title;\n            chapterNumber = chapter.number;\n          }\n        }\n      });\n\n      return {\n        title: chapterTitle,\n        number: chapterNumber\n      };\n    }\n\n    /**\n     * Sets episode title and respective chapter information from metadata\n     * @param metadata\n     */\n\n  }, {\n    key: 'processMetadata',\n    value: function processMetadata(metadata) {\n      this.episodeTitle = 'Episode ' + metadata.number;\n      this.setTitle(this.episodeTitle);\n\n      this.chapterMetadata = this.prepareChapterMetadata(metadata);\n      this.currentChapterMetadata = { number: 0, title: '' };\n    }\n\n    /**\n     * Returns array of objects describing respective chapter information\n     * @param metadata\n     * @returns {Array} of objects containing time, number and title properties\n     */\n\n  }, {\n    key: 'prepareChapterMetadata',\n    value: function prepareChapterMetadata(metadata) {\n      var chapterMetadata = [];\n      metadata.chapters.forEach(function (chapter) {\n        chapterMetadata.push({\n          time: chapter.time,\n          number: chapter.number,\n          title: chapter.number + '. ' + chapter.title\n        });\n      });\n\n      return chapterMetadata;\n    }\n\n    /**\n     * Metadata is expected in the data-metadata attribute of $elm as a JSON-like string with single-\n     * quoted instead of double-quoted values.\n     */\n\n  }, {\n    key: 'loadMetadata',\n    value: function loadMetadata() {\n      try {\n        this.processMetadata(JSON.parse(this.$elm.dataset.metadata.replace(/'/g, '\"')));\n        this.usingMetadata = true;\n      } catch (e) {\n        console.error(e);\n        this.usingMetadata = false;\n      }\n    }\n  }], [{\n    key: 'secondsToMinutes',\n    value: function secondsToMinutes(seconds) {\n      var _seconds = parseInt(seconds, 10);\n      var mins = Math.floor(_seconds / 60);\n      var secs = _seconds % 60;\n      if (secs <= 9) {\n        secs = '0' + secs;\n      }\n\n      return mins + ':' + secs;\n    }\n  }, {\n    key: 'updateIconState',\n    value: function updateIconState($icon, state) {\n      if (state !== 'play' && state !== 'pause') {\n\n        return;\n      }\n\n      $icon.src = AudioPlayer.getIconPath(state);\n      $icon.alt = state;\n    }\n  }, {\n    key: 'buildProgressIndicator',\n    value: function buildProgressIndicator(player) {\n      var $barWrapper = utils.buildElement('div', ['audio-player__progress'], '', '#' + player.uniqueId + ' [class*=\"audio-player__container\"]');\n\n      utils.buildElement('div', ['audio-player__progress_bar'], '', $barWrapper);\n\n      $barWrapper.addEventListener('click', function (e) {\n        player.handleSeek(e, player);\n      }, false);\n\n      return $barWrapper;\n    }\n\n    /**\n     * Builds the play button.\n     *\n     * @param {AudioPlayer} player The audio player object that the new element belongs to\n     * @returns {Element} The play/pause button\n     */\n\n  }, {\n    key: 'buildPlayButton',\n    value: function buildPlayButton(player) {\n      var $button = utils.buildElement('button', ['audio-player__toggle_play'], '', '#' + player.uniqueId + ' [class*=\"audio-player\"]', true);\n      var $image = utils.buildElement('img', ['audio-player__toggle_play_icon'], '', $button);\n      $image.src = AudioPlayer.getIconPath('play');\n      $image.alt = 'Play';\n      return $button;\n    }\n\n    /**\n     * Builds the current time and duration indicators.\n     *\n     * @param {AudioPlayer} player The audio player object that the new element belongs to\n     * @returns {Element} An element containing the current time and duration indicators.\n     */\n\n  }, {\n    key: 'buildTimeIndicators',\n    value: function buildTimeIndicators(player) {\n      var playerId = player.uniqueId;\n      var $container = utils.buildElement('div', ['audio-player__times'], '', '#' + playerId + ' [class*=audio-player__header]', true);\n\n      utils.buildElement('span', ['audio-player__current_time'], '0:00', $container);\n      utils.buildElement('span', ['audio-player__duration'], '0:00', $container);\n      return $container;\n    }\n  }, {\n    key: 'getIconPath',\n    value: function getIconPath(iconName) {\n\n      if (iconName !== 'play' && iconName !== 'pause') {\n        return;\n      }\n\n      return '../../assets/img/icons/audio-' + iconName + '.svg';\n    }\n  }]);\n\n  return AudioPlayer;\n}();\n\n},{\"../libs/elife-utils\":17}],5:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = function () {\n  function BackgroundImage($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, BackgroundImage);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    this.sourceToUse = null;\n    this.thresholdWidth = parseInt(this.$elm.dataset.thresholdWidth, 10);\n    if (this.isValidThreshold(this.thresholdWidth) && !this.isThresholdMet(this.thresholdWidth, this.window.innerWidth)) {\n      this.window.addEventListener('resize', this.resizeHandler.bind(this));\n    } else {\n      this.init();\n    }\n  }\n\n  _createClass(BackgroundImage, [{\n    key: 'init',\n    value: function init() {\n      this.sourceToUse = this.calcSourceToUse(this.$elm, utils.isHighDpr(this.window));\n      this.setDarkBackground();\n      this.setupEventHandlers(this.$elm, this.setLightBackground.bind(this), this.setDarkBackground.bind(this));\n    }\n  }, {\n    key: 'isValidThreshold',\n    value: function isValidThreshold(candidate) {\n      return !(typeof candidate === 'boolean' || candidate === null || Array.isArray(candidate) || isNaN(candidate) || candidate < 0);\n    }\n  }, {\n    key: 'isThresholdMet',\n    value: function isThresholdMet(threshold, viewportWidth) {\n      return viewportWidth >= threshold;\n    }\n  }, {\n    key: 'resizeHandler',\n    value: function resizeHandler() {\n      if (this.isThresholdMet(this.thresholdWidth, this.window.innerWidth)) {\n        this.window.removeEventListener('resize', this.resizeHandler.bind(this));\n        this.init();\n      }\n    }\n  }, {\n    key: 'setupEventHandlers',\n    value: function setupEventHandlers($elm, setLightBackground, setDarkBackground) {\n      if ($elm.getAttribute('data-invert-bgcol-on-hover') !== null) {\n        $elm.addEventListener('mouseenter', setLightBackground);\n        $elm.addEventListener('mouseleave', setDarkBackground);\n      }\n    }\n  }, {\n    key: 'setDarkBackground',\n    value: function setDarkBackground() {\n      if (!!this.sourceToUse) {\n        this.$elm.style.backgroundImage = this.getBackgroundImagesString(this.sourceToUse, 'linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))');\n        this.$elm.style.color = '#fff';\n      }\n    }\n  }, {\n    key: 'setLightBackground',\n    value: function setLightBackground() {\n      if (!!this.sourceToUse) {\n        this.$elm.style.backgroundImage = this.getBackgroundImagesString(this.sourceToUse, 'linear-gradient(to top, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5))');\n        this.$elm.style.color = '#212121';\n      }\n    }\n  }, {\n    key: 'getBackgroundImagesString',\n    value: function getBackgroundImagesString(path, grandient) {\n      if (!path || !path.length || path.length === 0) {\n        return '';\n      }\n\n      return grandient + ', url(' + path + ')';\n    }\n  }, {\n    key: 'calcSourceToUse',\n    value: function calcSourceToUse(sourceDefiner, isHighDpr) {\n      var lowResSource = '';\n      var highResSource = '';\n      if (!sourceDefiner) {\n        return '';\n      }\n\n      if (!!sourceDefiner.dataset) {\n        highResSource = sourceDefiner.dataset.highResImageSource;\n        lowResSource = sourceDefiner.dataset.lowResImageSource;\n      } else {\n        highResSource = sourceDefiner.getAttribute('data-highResImageSource');\n        lowResSource = sourceDefiner.getAttribute('data-lowResImageSource');\n      }\n\n      if (isHighDpr && !highResSource || !isHighDpr && !lowResSource) {\n        return '';\n      }\n\n      if (isHighDpr) {\n        return highResSource;\n      }\n\n      return lowResSource;\n    }\n  }]);\n\n  return BackgroundImage;\n}();\n\n},{\"../libs/elife-utils\":17}],6:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = function () {\n  function Carousel($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, Carousel);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    this.moveableStage = this.$elm.querySelector('.carousel__items');\n    this.originalSlideWrappers = this.moveableStage.querySelectorAll('.carousel__item_wrapper');\n    this.originalSlideCount = this.originalSlideWrappers.length;\n    this.currentSlideCount = this.originalSlideCount;\n\n    if (this.originalSlideCount < 2) {\n      return;\n    }\n\n    this.init();\n  }\n\n  _createClass(Carousel, [{\n    key: 'init',\n    value: function init() {\n      var _this = this;\n\n      this.currentSlide = 1;\n      this.timerInterval = 10000;\n\n      this.$elm.querySelector('.carousel__heading').classList.add('visuallyhidden');\n      this.$elm.appendChild(this.buildVisibleControls());\n      this.$toggler = this.buildControl$toggle();\n      this.$elm.insertBefore(this.$toggler, this.$elm.querySelector('.carousel__items'));\n      this.updateWidth();\n      this.updateControlPanel(this.currentSlide);\n      this.togglePlay(this.$toggler);\n      this.$toggler.focus();\n\n      this.window.addEventListener('keydown', this.handleKey.bind(this));\n      this.window.addEventListener('blur', this.cancelTimer.bind(this));\n      this.window.addEventListener('focus', this.setupTimer.bind(this));\n      this.window.addEventListener('resize', function () {\n        _this.updateWidth();\n        _this.adjustTranslateForResize();\n      });\n      this.makeSingleSlideATVisible(this.currentSlide);\n    }\n  }, {\n    key: 'atHide',\n    value: function atHide($node) {\n      $node.setAttribute('tabindex', -1);\n      $node.setAttribute('aria-hidden', true);\n    }\n  }, {\n    key: 'atShow',\n    value: function atShow($node) {\n      $node.removeAttribute('tabindex', -1);\n      $node.removeAttribute('aria-hidden', true);\n    }\n  }, {\n    key: 'setATVisibility',\n    value: function setATVisibility($root, show) {\n      var _this2 = this;\n\n      var action = void 0;\n      if (show) {\n        action = this.atShow;\n      } else {\n        action = this.atHide;\n      }\n\n      action.call(this, $root);\n      [].forEach.call($root.childNodes, function ($descendant) {\n        if ($descendant.nodeType === $descendant.ELEMENT_NODE) {\n          action.call(_this2, $descendant);\n          if ($descendant.hasChildNodes()) {\n            _this2.setATVisibility($descendant, show);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'makeSingleSlideATVisible',\n    value: function makeSingleSlideATVisible(slideNumber) {\n      var _this3 = this;\n\n      [].forEach.call(this.moveableStage.querySelectorAll('.carousel__item_wrapper'), function ($el) {\n        _this3.setATVisibility($el, false);\n      });\n      var _slideNumber = slideNumber || 1;\n      var slide = this.$elm.querySelectorAll('.carousel-item')[_slideNumber - 1];\n      this.setATVisibility(slide, true);\n      slide.focus();\n    }\n\n    /**\n     * Builds and returns all controls for the carousel\n     *\n     * @returns {Element} The control panel\n     */\n\n  }, {\n    key: 'buildVisibleControls',\n    value: function buildVisibleControls() {\n      // Btn wrappers needed to reserve space in case buttons are removed, to stop things moving about\n      var $previousWrapper = this.buildControl$traverser('previous');\n      var $nextWrapper = this.buildControl$traverser('next');\n\n      this.buttons = {\n        previous: $previousWrapper.querySelector('button'),\n        next: $nextWrapper.querySelector('button')\n      };\n\n      // switches are the circular buttons for depicting/going to a slide\n      this.switches = this.buildControl$switches(this.originalSlideCount);\n\n      var $controlPanel = utils.buildElement('div', ['carousel__control_panel']);\n      var $visibleControlsWrapper = utils.buildElement('div', ['carousel__control_panel__visible']);\n      var visibleControls = [$previousWrapper, this.switches, $nextWrapper];\n      visibleControls.forEach(function (control) {\n        $visibleControlsWrapper.appendChild(control);\n      });\n\n      $controlPanel.appendChild($visibleControlsWrapper);\n\n      return $controlPanel;\n    }\n\n    /**\n     * Returns a div-wrapped button for a next or previous control, with event listener\n     *\n     * @param {String} direction 'previous' | 'next'\n     * @returns {Element} A div-wrapped button\n     */\n\n  }, {\n    key: 'buildControl$traverser',\n    value: function buildControl$traverser(direction) {\n      var _this4 = this;\n\n      var _direction = direction === 'previous' ? 'previous' : 'next';\n      var text = direction + ' item';\n      var $wrapper = utils.buildElement('div', ['carousel__control_wrapper']);\n      var $button = utils.buildElement('button', ['carousel__control', 'carousel__control--traverse', 'carousel__control--' + _direction], '', $wrapper);\n      $button.addEventListener('click', function () {\n        _this4.userInitiatedProgression(_this4[_direction]);\n      });\n\n      utils.buildElement('span', ['visuallyhidden'], text, $button);\n      return $wrapper;\n    }\n\n    /**\n     * Builds and returns a visually hidden play/pause toggle (button & label), with event listener\n     *\n     * @returns {Element} The toggler\n     */\n\n  }, {\n    key: 'buildControl$toggle',\n    value: function buildControl$toggle() {\n      var _this5 = this;\n\n      var $button = utils.buildElement('button', ['carousel__control--toggler', 'visuallyhidden'], 'Play carousel');\n      $button.setAttribute('aria-label', 'The carousel is now paused. Play carousel');\n      $button.addEventListener('click', function () {\n        _this5.togglePlay($button);\n      });\n      return $button;\n    }\n\n    /**\n     * Builds and returns a list of switches, with event listener attached\n     *\n     * @param quantity The number of switches to build\n     * @returns {Element} The list of switches\n     */\n\n  }, {\n    key: 'buildControl$switches',\n    value: function buildControl$switches(quantity) {\n      var $switches = utils.buildElement('ol', ['carousel__control_switches']);\n      for (var i = 1; i <= quantity; i += 1) {\n        $switches.appendChild(this.buildControl$switch('Go to item ' + i + ' of ' + this.originalSlideCount, i));\n      }\n\n      $switches.addEventListener('click', this.activateSwitch.bind(this));\n      return $switches;\n    }\n\n    /**\n     * Builds and returns a switch\n     * @param text The next for the switch (visually hidden)\n     * @returns {Element} The switch\n     */\n\n  }, {\n    key: 'buildControl$switch',\n    value: function buildControl$switch(text, index) {\n      var $item = utils.buildElement('li', ['carousel__control--switch-item']);\n      var $button = utils.buildElement('button', ['carousel__control', 'carousel__control--switch'], '', $item);\n      var $switch = utils.buildElement('span', ['visuallyhidden'], '' + index, $button);\n      $switch.setAttribute('aria-label', text);\n      return $item;\n    }\n\n    /**\n     * Toggles the play/pause state of the carousel based on the current value of the toggle button.\n     *\n     * @param $button The toggler\n     */\n\n  }, {\n    key: 'togglePlay',\n    value: function togglePlay($button) {\n      var currentButtonState = $button.innerHTML;\n      if (currentButtonState === 'Pause carousel') {\n        $button.innerHTML = 'Play carousel';\n        $button.setAttribute('aria-label', 'The carousel is now paused. Play carousel');\n        this.timerStopped = true;\n        this.cancelTimer();\n      } else {\n        $button.innerHTML = 'Pause carousel';\n        $button.setAttribute('aria-label', 'The carousel is now playing. Pause carousel');\n        this.timerStopped = false;\n        this.setupTimer();\n      }\n    }\n  }, {\n    key: 'cancelTimer',\n    value: function cancelTimer() {\n      this.window.clearInterval(this.timer);\n    }\n  }, {\n    key: 'setupTimer',\n    value: function setupTimer() {\n      var _this6 = this;\n\n      // make sure old timer stopped before starting a new one\n      this.cancelTimer();\n\n      // Indicates whether timer should run at all on this carousel (hard stop, not pause).\n      this.timerStopped = false;\n      this.timer = this.startNewAdvancementTimer(this.timerInterval);\n\n      // mousing over the carousel cancels the timer\n      this.$elm.addEventListener('mouseenter', this.cancelTimer.bind(this));\n\n      // mouse out from the carousel resets the timer\n      this.$elm.addEventListener('mouseleave', function () {\n        _this6.cancelTimer();\n        if (!_this6.timerStopped) {\n          _this6.timer = _this6.startNewAdvancementTimer(_this6.timerInterval);\n        }\n      });\n    }\n  }, {\n    key: 'startNewAdvancementTimer',\n    value: function startNewAdvancementTimer(intervalInMs) {\n      var _this7 = this;\n\n      return this.window.setInterval(function () {\n        if (!_this7.timerStopped) {\n          _this7.next();\n        }\n      }, intervalInMs);\n    }\n  }, {\n    key: 'handleKey',\n    value: function handleKey(e) {\n      var code = e.keyCode || e.charCode;\n      if (code === 37 /*left arrow*/ || code === 39 /*right arrow*/) {\n          this.timerStopped = true;\n          if (code === 37) {\n            this.userInitiatedProgression(this.previous);\n          } else {\n            this.userInitiatedProgression(this.next);\n          }\n        }\n    }\n  }, {\n    key: 'userInitiatedProgression',\n    value: function userInitiatedProgression(callback) {\n      // Any user-activation of a control permanently stops the timer\n      this.timerStopped = true;\n      if (!!callback && typeof callback === 'function') {\n        callback.call(this, true);\n      }\n    }\n  }, {\n    key: 'next',\n    value: function next() {\n      if (this.currentSlide % this.originalSlideCount === 0) {\n        this.extendStage();\n      }\n\n      this.updateSlide();\n      this.updateControlPanel(this.currentSlide);\n    }\n  }, {\n    key: 'previous',\n    value: function previous() {\n      if (this.currentSlide > 1) {\n        this.updateSlide('previous');\n        this.updateControlPanel(this.currentSlide);\n      }\n    }\n  }, {\n    key: 'extendStage',\n    value: function extendStage() {\n      var _this8 = this;\n\n      // Make room for another slide set\n      this.currentSlideCount += this.originalSlideCount;\n      this.updateWidth();\n\n      // Clone in the new slide set\n      [].forEach.call(this.originalSlideWrappers, function (slide) {\n        _this8.moveableStage.appendChild(slide.cloneNode(true));\n      });\n    }\n\n    /**\n     * Translates moveableStage 1 slide's width in the appropriate direction\n     * @param {String} direction 'next' | 'previous' Direction to move\n     */\n\n  }, {\n    key: 'updateSlide',\n    value: function updateSlide(direction) {\n      var currentOffset = this.getCurrentOffset();\n      var currentWidthStringMatch = this.window.getComputedStyle(this.$elm).width.match(/^([0-9]+)px/);\n      var currentCarouselWidth = this.window.parseInt(currentWidthStringMatch[1], 10);\n      var newOffset = void 0;\n      if (direction === 'previous') {\n        this.currentSlide -= 1;\n        newOffset = currentOffset + currentCarouselWidth;\n      } else {\n        this.currentSlide += 1;\n        newOffset = currentOffset - currentCarouselWidth;\n      }\n\n      utils.updateElementTranslate(this.moveableStage, [newOffset + 'px', 0]);\n    }\n\n    /**\n     * Returns the current numerical value of moveableStage's X translation in px\n     *\n     * @returns {number} Numerical value of the X translation of moveableStage\n     */\n\n  }, {\n    key: 'getCurrentOffset',\n    value: function getCurrentOffset() {\n      var offsetStringMatch = this.moveableStage.style.transform.match(/translate\\((.*)px,[^)]+\\)/);\n      if (!offsetStringMatch) {\n        return 0;\n      }\n\n      return this.window.parseInt(offsetStringMatch[1], 10);\n    }\n  }, {\n    key: 'updateControlPanel',\n    value: function updateControlPanel(currentSlide) {\n      this.hideInvalidButtonChoice(currentSlide);\n      this.updateActiveSwitch(currentSlide);\n    }\n\n    /**\n     * Hides previous button if on first slide.\n     *\n     * @param {number} currentSlide The number of the current slide\n     */\n\n  }, {\n    key: 'hideInvalidButtonChoice',\n    value: function hideInvalidButtonChoice(currentSlide) {\n      this.buttons.previous.classList.remove('hidden');\n      this.buttons.next.classList.remove('hidden');\n      var logicalSlideNumber = this.getLogicalSlideNumber(currentSlide);\n      if (logicalSlideNumber === 1) {\n        this.buttons.previous.classList.add('hidden');\n      } else if (logicalSlideNumber === this.originalSlideCount) {\n        this.buttons.next.classList.add('hidden');\n      }\n    }\n\n    /**\n     * Activate the switch indicating the current logical slide\n     *\n     * @param {number} currentSlide The number of the current slide\n     */\n\n  }, {\n    key: 'updateActiveSwitch',\n    value: function updateActiveSwitch(currentSlide) {\n      var currentLogicalSlide = this.getLogicalSlideNumber(currentSlide);\n      [].forEach.call(this.switches.querySelectorAll('.carousel__control--switch'), function (aSwitch, i) {\n        if (i === currentLogicalSlide - 1) {\n          aSwitch.classList.add('active');\n        } else {\n          aSwitch.classList.remove('active');\n        }\n      });\n    }\n\n    /**\n     * Returns the number of the side within its set.\n     *\n     * E.g. where there's 3 slides in a set, and the actualSlideNumber is 8, this indicates that it's\n     * the 2nd slide in the 3rd slide set, so its logical number is 2.\n     * (A slide set is a clone of the starting slides to facilitate perpetual scroll.)\n     *\n     * @param {number} actualSlideNumber Number of the slide to evaluate\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getLogicalSlideNumber',\n    value: function getLogicalSlideNumber(actualSlideNumber) {\n      var setSize = this.originalSlideCount;\n      var slideSetOfSlide = Math.ceil(actualSlideNumber / setSize);\n      var firstSlideOfSet = setSize * slideSetOfSlide - (setSize - 1);\n      return actualSlideNumber - firstSlideOfSet + 1;\n    }\n\n    /**\n     * Move to the closest slide with the same logical number as the activated switch\n     *\n     * @param {Event} e The event\n     */\n\n  }, {\n    key: 'activateSwitch',\n    value: function activateSwitch(e) {\n      var logicalSlideRequested = this.window.parseInt(e.target.querySelector('span').innerHTML, 10);\n      var logicalSlideCurrent = this.getLogicalSlideNumber(this.currentSlide);\n      var slideOffset = logicalSlideRequested - logicalSlideCurrent;\n\n      if (logicalSlideRequested === logicalSlideCurrent) {\n        return;\n      }\n\n      var callback = slideOffset < 0 ? this.previous : this.next;\n\n      for (var i = 0; i < Math.abs(slideOffset); i += 1) {\n        this.userInitiatedProgression(callback);\n      }\n    }\n  }, {\n    key: 'adjustTranslateForResize',\n    value: function adjustTranslateForResize() {\n      var carouselWidth = window.getComputedStyle(this.$elm).width.match(/([0-9]+)px/)[1];\n      var currentSlide = this.currentSlide;\n      var expectedOffset = (currentSlide - 1) * carouselWidth * -1;\n      this.moveableStage.style.transform = 'translate(' + expectedOffset + 'px, 0)';\n    }\n  }, {\n    key: 'updateWidth',\n    value: function updateWidth() {\n      this.moveableStage.style.width = utils.adjustPxString(this.window.getComputedStyle(this.$elm).width, this.currentSlideCount, 'multiply');\n    }\n  }]);\n\n  return Carousel;\n}();\n\n},{\"../libs/elife-utils\":17}],7:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  function ContentHeaderArticle($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, ContentHeaderArticle);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n    this.$elm.classList.add('content-header-article--js');\n\n    // Should track SASS variable $bkpt-content-header--medium-width.\n    this.breakpointInPx = 768;\n    this.currentView = this.calcCurrentView(this.breakpointInPx);\n\n    this.authors = $elm.querySelectorAll('.content-header__author_list_item');\n    this.institutions = $elm.querySelectorAll('.content-header__institution_list_item');\n\n    this.hasToggleAuthor = false;\n    this.hasToggleInstitution = false;\n    this.hideAllExcessItems('author', this.authors);\n    this.hideAllExcessItems('institution', this.institutions);\n\n    var _this = this;\n    this.window.addEventListener('resize', function () {\n      var newView = _this.calcCurrentView(_this.breakpointInPx);\n      if (newView !== _this.currentView) {\n        _this.currentView = newView;\n        _this.handleAnyExcessItems('author', _this.authors);\n        _this.handleAnyExcessItems('institution', _this.institutions);\n      }\n    });\n  }\n\n  _createClass(ContentHeaderArticle, [{\n    key: 'handleAnyExcessItems',\n    value: function handleAnyExcessItems(itemType, items) {\n      var toggle = this.$elm.querySelector('.content-header__item_toggle');\n      if (toggle && toggle.innerHTML.indexOf('less') > -1 && this.currentView === 'wide') {\n        this.clearExcessMark(items);\n        this.toggleExcessItems(items);\n      } else {\n        this.clearExcessMark(items);\n        var excessItems = this.getExcessItems(itemType, items);\n        this.markAsExcess(excessItems);\n        this.toggleExcessItems(items);\n        this.markLastNonExcessItem(itemType, items);\n      }\n    }\n\n    /**\n     * Determine excess by itemType from items supplied and hides those.\n     *\n     * @param {string} itemType 'author' or 'institution'\n     * @param {DOMTokenList} items List of items to identify the excess within, and hide those\n     */\n\n  }, {\n    key: 'hideAllExcessItems',\n    value: function hideAllExcessItems(itemType, items) {\n      var excessItems = this.getExcessItems(itemType, items);\n      this.markAsExcess(excessItems);\n      this.toggleExcessItems(items);\n      this.addTrailingText(itemType, items);\n    }\n\n    /**\n     * Returns max number authors or institutions to be displayed by default at current screen width.\n     *\n     * Returns null if itemType is invalid.\n     *\n     * @param {string} itemType 'author' or 'institution'\n     * @returns {number|null} Number of the type of item to display by default at current screen width\n     */\n\n  }, {\n    key: 'getDefaultMaxItems',\n    value: function getDefaultMaxItems(itemType) {\n      if (this.currentView === 'wide') {\n        if (itemType === 'author') {\n          return 16;\n        }\n\n        if (itemType === 'institution') {\n          return 10;\n        }\n      } else {\n        if (itemType === 'author') {\n          return 1;\n        }\n\n        if (itemType === 'institution') {\n          return 0;\n        }\n      }\n\n      return null;\n    }\n\n    /**\n     * Returns array of elements in excess of the default max items, or null if itemType invalid.\n     *\n     * The returned array is a subset of the list supplied, or empty if there are no excess items.\n     *\n     * @param {string} itemType 'author' or 'institution'\n     * @param {DOMTokenList} items List of items from which to identify the excess\n     * @returns {Array|null} Items in excess of the default maximum for the current screen width\n     */\n\n  }, {\n    key: 'getExcessItems',\n    value: function getExcessItems(itemType, items) {\n      if (itemType !== 'author' && itemType !== 'institution') {\n        return null;\n      }\n\n      var defaultMaxItems = this.getDefaultMaxItems(itemType);\n      if (items.length > defaultMaxItems) {\n        return [].slice.call(items, defaultMaxItems);\n      }\n\n      return [];\n    }\n\n    /**\n     * Marks supplied list elements as excess.\n     *\n     * @param {Array} els The elements to mark as excess\n     */\n\n  }, {\n    key: 'markAsExcess',\n    value: function markAsExcess(els) {\n      els.forEach(function ($el) {\n        $el.classList.add('excess-item');\n      });\n    }\n\n    /**\n     * Clears any excess mark from all elements in the supplied list.\n     *\n     * @param {DOMTokenList} els The elements to clear the excess mark from\n     */\n\n  }, {\n    key: 'clearExcessMark',\n    value: function clearExcessMark(els) {\n      [].forEach.call(els, function ($el) {\n        $el.classList.remove('excess-item');\n      });\n    }\n\n    /**\n     * Toggles the display of any excess items found in the supplied list of elements.\n      * @param {DOMTokenList} items The elements to inspect for excess items, and to toggle those found\n     */\n\n  }, {\n    key: 'toggleExcessItems',\n    value: function toggleExcessItems(items) {\n      [].forEach.call(items, function (item) {\n        if (item.classList.contains('excess-item')) {\n          item.classList.add('visuallyhidden');\n        } else {\n          item.classList.remove('visuallyhidden');\n        }\n      });\n    }\n\n    /**\n     * Returns the name of the current view.\n     *\n     * @param {number} breakpoint The px viewport width that determines the view.\n     *\n     * @returns {string} the view name ('wide' or 'narrow').\n     */\n\n  }, {\n    key: 'calcCurrentView',\n    value: function calcCurrentView(breakpoint) {\n      return this.window.matchMedia('(min-width: ' + breakpoint + 'px)').matches ? 'wide' : 'narrow';\n    }\n\n    /**\n     * Marks the last shown non-excess item with particlular class (so not if showing last in list).\n     *\n     * @param {string} itemType 'author' or 'institution'\n     * @param {DOMTokenList} items List of items to act upon\n     */\n\n  }, {\n    key: 'markLastNonExcessItem',\n    value: function markLastNonExcessItem(itemType, items) {\n      var lastShownIndex = null;\n      var foundLastShown = false;\n      [].forEach.call(items, function (item, i) {\n\n        // Clear old any obsolete determination of what's the last non-excess item.\n        items[i].classList.remove('content-header__' + itemType + '--last-non-excess');\n        if (item.classList.contains('excess-item') && !foundLastShown) {\n          lastShownIndex = i - 1;\n          foundLastShown = true;\n        }\n      });\n\n      if (lastShownIndex !== null && lastShownIndex > -1) {\n        var lastShown = items[lastShownIndex].querySelector('.content-header__' + itemType);\n        if (lastShown) {\n          lastShown.classList.add('content-header__' + itemType + '--last-non-excess');\n        }\n      }\n    }\n\n    /**\n     * Adds trailing text to the visible end of truncated author & institution lists & builds toggle.\n     *\n     * @param {string} itemType The type of items supplied\n     * @param {DOMTokenList} items The items to which to add the trailing text\n     */\n\n  }, {\n    key: 'addTrailingText',\n    value: function addTrailingText(itemType, items) {\n      if (itemType === 'author' && items.length > this.getDefaultMaxItems('author')) {\n        if (!this.hasToggleAuthor) {\n          this.buildSeeMoreLessToggle('author');\n          this.hasToggleAuthor = true;\n        }\n      }\n\n      if (itemType === 'institution' && items.length > this.getDefaultMaxItems('institution')) {\n        if (!this.hasToggleInstitution) {\n          this.buildSeeMoreLessToggle('institution');\n          this.hasToggleInstitution = true;\n        }\n      }\n\n      this.markLastNonExcessItem(itemType, items);\n    }\n\n    /**\n     * Builds the show/hide toggle for excess authors & institutions.\n     */\n\n  }, {\n    key: 'buildSeeMoreLessToggle',\n    value: function buildSeeMoreLessToggle(itemType) {\n      var _this2 = this;\n\n      // This toggle only required due to screen width constraints. All content already accessible as\n      // it's not being hidden in the first place. Hence an aria-hidden li, rather than an anchor.\n      // Should conform to https://www.w3.org/TR/wai-aria/states_and_properties#aria-hidden\n      var toggle = this.doc.createElement('li');\n      var toggleOnText = 'see&nbsp;all';\n      var toggleOffText = 'see&nbsp;less';\n      toggle.setAttribute('aria-hidden', 'true');\n      toggle.classList.add('content-header__item_toggle', 'content-header__item_toggle--' + itemType);\n      toggle.innerHTML = '&nbsp;&hellip;&nbsp;' + toggleOnText;\n      toggle.addEventListener('click', function (e) {\n        var target = e.target;\n        if (target.innerHTML.indexOf(toggleOnText) > -1) {\n          [].forEach.call(_this2.doc.querySelectorAll('.content-header__item_toggle'), function (item) {\n            item.innerHTML = '&nbsp;' + toggleOffText;\n          });\n          _this2.clearExcessMark(_this2.authors);\n          _this2.clearExcessMark(_this2.institutions);\n          _this2.toggleExcessItems(_this2.authors);\n          _this2.toggleExcessItems(_this2.institutions);\n        } else {\n          [].forEach.call(_this2.doc.querySelectorAll('.content-header__item_toggle'), function (item) {\n            item.innerHTML = '&nbsp;&hellip;&nbsp;' + toggleOnText;\n          });\n          _this2.hideAllExcessItems('author', _this2.authors);\n          _this2.hideAllExcessItems('institution', _this2.institutions);\n        }\n      });\n      this.$elm.querySelector('.content-header__' + itemType + '_list').appendChild(toggle);\n    }\n  }]);\n\n  return ContentHeaderArticle;\n}();\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\n/**\n * FragmentHandler mediates how the hash controls the opening of article sections.\n * It has no dedicated pattern template and its data-behaviour may live on any element, but note\n * that because it's a singleton only one will be instansiated.\n * @type {FragmentHandler}\n */\nmodule.exports = function () {\n  _createClass(FragmentHandler, null, [{\n    key: 'isSingleton',\n    value: function isSingleton() {\n      return true;\n    }\n  }]);\n\n  function FragmentHandler($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, FragmentHandler);\n\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n    this.window.addEventListener('DOMContentLoaded', this.handleDomLoad.bind(this));\n  }\n\n  _createClass(FragmentHandler, [{\n    key: 'handleDomLoad',\n    value: function handleDomLoad(e) {\n      this.handleSectionOpeningViaHash(e);\n      this.window.addEventListener('hashchange', this.handleSectionOpeningViaHash.bind(this));\n    }\n\n    /**\n     * Indicates whether an HTML element with a given id is found as/within a specific chunk of html\n     *\n     * @param {String} id The id  of the HTML element to search for\n     * @param {HTMLElement} $section The element to search/search within\n     * @param {HTMLDocument} doc\n     * @param {Function} areElementsNested Handles determination of nesting\n     * @returns {boolean} true if element with id is $section, or is contained within $section\n     */\n\n  }, {\n    key: 'isIdOfOrWithinSection',\n    value: function isIdOfOrWithinSection(id, $section, doc, areElementsNested) {\n      if (id === $section.id) {\n        return true;\n      }\n\n      var $fragWithId = doc.querySelector('#' + id);\n      return areElementsNested($section, $fragWithId);\n    }\n\n    /**\n     * Returns the id of the collapsed section containing the html element with idToFind, or null.\n     *\n     * @param {String} idToFind The id to search for\n     * @param {HTMLDocument} doc\n     * @param {Function} areElementsNested Handles determination of nesting\n     * @returns {String} The id of the collapsed section containing idToFind, or null\n     */\n\n  }, {\n    key: 'getIdOfCollapsedSection',\n    value: function getIdOfCollapsedSection(idToFind, doc, areElementsNested) {\n      var _this = this;\n\n      var collapsedSections = doc.querySelectorAll('.article-section--collapsed');\n      if (!collapsedSections) {\n        return null;\n      }\n\n      var $collapsedSectionContainingFrag = void 0;\n      [].forEach.call(collapsedSections, function ($collapsedSection) {\n        if (!$collapsedSectionContainingFrag) {\n          if (_this.isIdOfOrWithinSection(idToFind, $collapsedSection, doc, areElementsNested)) {\n            $collapsedSectionContainingFrag = $collapsedSection;\n          }\n        }\n      });\n\n      if (!!$collapsedSectionContainingFrag) {\n        return $collapsedSectionContainingFrag.id;\n      }\n\n      return null;\n    }\n\n    /**\n     * Fires a custom expandsection event on the collapsed article section containing id from hash.\n     *\n     * @param e\n     * @returns {boolean} False if no hash found\n     */\n\n  }, {\n    key: 'handleSectionOpeningViaHash',\n    value: function handleSectionOpeningViaHash(e) {\n\n      // TODO: Code similar to that in Audioplayer.seekNewTime(), refactor out into common\n      var hash = '';\n\n      // event was hashChange\n      if (!!e.newURL) {\n        hash = e.newURL.substring(e.newURL.indexOf('#') + 1);\n      } else {\n        hash = this.window.location.hash.substring(1);\n      }\n\n      if (!hash) {\n        return false;\n      }\n\n      var idOfCollapsedSection = this.getIdOfCollapsedSection(hash, this.doc, utils.areElementsNested);\n      if (!!idOfCollapsedSection) {\n        // emit a section open event with the id of the section to open\n        // TODO: Used in several places, refactor out into common\n        var expandSection = void 0;\n        try {\n          expandSection = new CustomEvent('expandsection', { detail: hash });\n        } catch (e) {\n          // CustomEvent not supported, do it the old fashioned way\n          expandSection = document.createEvent('expandsection');\n          expandSection.initCustomEvent('expandsection', true, true, { detail: hash });\n        }\n\n        this.doc.querySelector('#' + idOfCollapsedSection).dispatchEvent(expandSection);\n      }\n    }\n  }]);\n\n  return FragmentHandler;\n}();\n\n},{\"../libs/elife-utils\":17}],9:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  function MainMenu($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, MainMenu);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n  }\n\n  /**\n   * Moves main menu from default non-js DOM position into position required by js implementation.\n   */\n\n\n  _createClass(MainMenu, [{\n    key: 'moveWithinDom',\n    value: function moveWithinDom() {\n      this.$elm.classList.add('main-menu--js');\n      var $globalWrapper = this.doc.querySelector('.global-wrapper');\n      if (!!$globalWrapper) {\n        $globalWrapper.insertBefore(this.$elm, $globalWrapper.firstElementChild);\n      }\n    }\n\n    /**\n     * Indicates whether the main menu is currently open.\n     *\n     * @returns {boolean} true if the main menu is currently open\n     */\n\n  }, {\n    key: 'isOpen',\n    value: function isOpen() {\n      return this.$elm.classList.contains('main-menu--shown');\n    }\n\n    /**\n     * Closes the main menu\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      this.$elm.classList.remove('main-menu--shown');\n      this.doc.querySelector('.global-wrapper').classList.remove('pull-offscreen-right');\n    }\n\n    /**\n     * Opens the main menu\n     */\n\n  }, {\n    key: 'open',\n    value: function open() {\n      this.$elm.classList.add('main-menu--shown');\n      this.doc.querySelector('.global-wrapper').classList.add('pull-offscreen-right');\n    }\n  }]);\n\n  return MainMenu;\n}();\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function Math($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, Math);\n\n    this.window = _window;\n    Math.loadDependencies(doc);\n  }\n\n  _createClass(Math, null, [{\n    key: 'loadDependencies',\n    value: function loadDependencies(doc) {\n      if (!Math.dependenciesAlreadySetup(doc)) {\n        Math.setupProperties();\n        Math.load(doc);\n      }\n    }\n  }, {\n    key: 'dependenciesAlreadySetup',\n    value: function dependenciesAlreadySetup(doc) {\n      return !!doc.querySelector('script[src*=\"mathjax\"]');\n    }\n  }, {\n    key: 'setupProperties',\n    value: function setupProperties() {\n      window.MathJax = {\n        'HTML-CSS': {\n          linebreaks: { automatic: true, width: '75% container' }\n        },\n        SVG: {\n          linebreaks: { automatic: true, width: '75% container' }\n        }\n      };\n    }\n  }, {\n    key: 'setupResizeHandler',\n    value: function setupResizeHandler() {\n      var resizeTimeout = void 0;\n      var resizeThrottler = function resizeThrottler() {\n        if (!resizeTimeout) {\n          resizeTimeout = setTimeout(function () {\n            resizeTimeout = null;\n\n            // TODO: change so exactly one rerender regardless of number of Math instances.\n            // Consider tacking at the same time as fragment handler.\n            if (!!this.window.MathJax) {\n              this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub]);\n            }\n          }, 300);\n        }\n      };\n\n      window.addEventListener('resize', resizeThrottler);\n    }\n  }, {\n    key: 'load',\n    value: function load(doc) {\n      var script = doc.createElement('script');\n      script.type = 'text/javascript';\n      script.addEventListener('load', Math.setupResizeHandler);\n      script.src = 'https://cdn.mathjax.org/mathjax/2.7-latest/MathJax.js?config=MML_HTMLorMML';\n      doc.querySelector('body').appendChild(script);\n    }\n  }]);\n\n  return Math;\n}();\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function MediaChapterListingItem($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, MediaChapterListingItem);\n\n    if (!$elm) {\n      console.warn('No element provided');\n      return;\n    }\n\n    console.log('Initialising Chapter listing item...');\n\n    this.$elm = $elm;\n    this.startTime = $elm.dataset.startTime;\n    if (!this.startTime || isNaN(this.startTime) || this.startTime < 0) {\n      return;\n    }\n\n    this.window = _window;\n    this.document = doc;\n\n    // When ready, AudioPlayer dispatches a custom event 'playerReady' on window, that supplies that\n    // player's html element id.\n    _window.addEventListener('playerReady', this.listenForChapterChange.bind(this));\n    this.$link = this.createLink(doc, this.$elm, this.startTime);\n    this.setupEventHandlers(this.$link);\n  }\n\n  _createClass(MediaChapterListingItem, [{\n    key: 'listenForChapterChange',\n    value: function listenForChapterChange(e) {\n      var $player = this.document.querySelector('#' + e.detail);\n      if (!!$player) {\n        $player.addEventListener('chapterChanged', this.indicateChapterChanged.bind(this));\n      }\n    }\n  }, {\n    key: 'createLink',\n    value: function createLink(document, $rootElm, startTime) {\n      var $title = $rootElm.querySelector('.teaser__header_text');\n      if (!$title) {\n        return;\n      }\n\n      var titleText = void 0;\n      var $existingLink = void 0;\n      try {\n        $existingLink = $title.querySelector('.teaser__header_text_link');\n        titleText = $existingLink.innerHTML;\n        $existingLink.parentNode.removeChild($existingLink);\n      } catch (e) {\n        titleText = $title.innerHTML;\n      }\n\n      var $link = document.createElement('a');\n      $link.innerHTML = titleText;\n      $link.setAttribute('href', '#' + startTime);\n      $link.classList.add('teaser__header_text_link');\n      $title.innerHTML = '';\n      $title.appendChild($link);\n      return $link;\n    }\n  }, {\n    key: 'indicateChapterChanged',\n    value: function indicateChapterChanged(e) {\n      var currentChapterNumber = e.detail;\n      if (currentChapterNumber === this.window.parseInt(this.$elm.dataset.chapterNumber)) {\n        this.$elm.classList.add('current-chapter');\n      } else {\n        this.$elm.classList.remove('current-chapter');\n      }\n    }\n  }, {\n    key: 'setupEventHandlers',\n    value: function setupEventHandlers($link) {\n      $link.addEventListener('chapterChanged', this.indicateChapterChanged);\n    }\n  }]);\n\n  return MediaChapterListingItem;\n}();\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = function () {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  function SearchBox($elm) {\n    var _this = this;\n\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, SearchBox);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.$container = $elm.querySelector('fieldset');\n    this.$form = $elm.querySelector('form');\n    this.$input = $elm.querySelector('input[type=\"search\"]');\n    this.$limit = $elm.querySelector('input[type=\"checkbox\"]');\n    this.$elm = $elm;\n    this.$searchButton = $elm.querySelector('button[type=\"submit\"]');\n    this.$resetButton = $elm.querySelector('button[type=\"reset\"]');\n    this.$inner = $elm.querySelector('.search-box__inner');\n\n    // Check there's a search input field, if not everything else is pointless.\n    if (!this.$input) {\n      return;\n    }\n\n    // TODO: Remove if not ultimately useful.\n    this.isSearchLimited = this.$limit && this.$limit.checked;\n\n    this.$elm.classList.add('search-box--js');\n\n    // setup\n    this.$form.setAttribute('autocomplete', 'off');\n\n    if (!doc.querySelector('.search-box__output')) {\n      this.$output = doc.createElement('div');\n      this.$output.innerHTML = '';\n      this.$output.classList.add('search-box__output');\n      this.$output.addEventListener('keyup', function (e) {\n        SearchBox.handleKeyEntry(e, _this);\n      });\n      this.$output.addEventListener('click', function (e) {\n        _this.useSuggestion(e.target);\n      });\n      this.$inner.appendChild(this.$output);\n    }\n\n    this.keywords = [];\n\n    // events\n    this.$resetButton.addEventListener('click', this.reset.bind(this));\n    this.$input.addEventListener('keyup', function (e) {\n      SearchBox.handleKeyEntry(e, _this);\n    });\n    this.$input.addEventListener('paste', this.showResetButton.bind(this));\n\n    // TODO: Remove this test data when decided how to populate this list of keywords with real data\n    SearchBox.setKeywords(['Xiao-Dong Li', 'Zhijian J Chen', 'Cell biology', 'Immunology', 'bacteria'], this);\n  }\n\n  /**\n   * Handles the reset button being pressed.\n   */\n\n\n  _createClass(SearchBox, [{\n    key: 'reset',\n    value: function reset() {\n      this.hideResetButton();\n      if (this.$output) {\n        this.$output.innerHTML = '';\n      }\n\n      this.$input.focus();\n    }\n\n    /**\n     * Hides the reset button.\n     */\n\n  }, {\n    key: 'hideResetButton',\n    value: function hideResetButton() {\n      this.$elm.classList.remove('search-box--populated');\n    }\n\n    /**\n     * Shows the reset button.\n     */\n\n  }, {\n    key: 'showResetButton',\n    value: function showResetButton() {\n      this.$elm.classList.add('search-box--populated');\n    }\n\n    /**\n     * Responds to the keyCode of a KeyboardEvent (used on the input field and suggestions).\n     *\n     * Takes care not to trap the tab character. Accessibility!\n     * Down arrow (keyCode 40): go to the next suggestion.\n     * Up arrow (keyCode 38): go to the previous suggestion.\n     * Return (keyCode 13): put the text of the current suggestion into the search box\n     * Any other key: use it to filter keywords; also show/hide reset button.\n     *\n     * @param {KeyboardEvent} e The event to respond to\n     * @param {SearchBox} searchBox Calling object (injected to make method more testable)\n     */\n\n  }, {\n    key: 'nextSuggestion',\n\n\n    /**\n     * Selects the search suggestion element after the current one.\n     *\n     * If already on the last one, loop to the beginning and select the input field.\n     *\n     * @param {HTMLElement} current The search suggestion or input field currently with focus\n     */\n    value: function nextSuggestion(current) {\n      if (!this.$output) {\n        return;\n      }\n\n      if (current === this.$input) {\n        this.$output.querySelector('ul li:first-child').focus();\n      } else if (!!current.nextElementSibling) {\n        current.nextElementSibling.focus();\n      } else {\n        this.$input.focus();\n      }\n    }\n\n    /**\n     * Selects the search suggestion element before the current one.\n     *\n     * If already on the input field, loop to the end and select the last one.\n     *\n     * @param {HTMLElement} current The search suggestion or input field currently with focus\n     */\n\n  }, {\n    key: 'prevSuggestion',\n    value: function prevSuggestion(current) {\n      if (!this.$output) {\n        return;\n      }\n\n      if (current === this.$input) {\n        this.$output.querySelector('ul li:last-child').focus();\n      } else if (!!current.previousElementSibling) {\n        current.previousElementSibling.focus();\n      } else {\n        this.$input.focus();\n      }\n    }\n\n    /**\n     * Copy the display text of the current suggestion into the search field.\n     *\n     * @param {HTMLElement} target The element containing the text to use\n     */\n\n  }, {\n    key: 'useSuggestion',\n    value: function useSuggestion(target) {\n      this.$input.value = target.innerHTML.replace(/<\\/?strong>/g, '');\n      if (this.$output) {\n        this.$output.innerHTML = '';\n        if (this.$input.value.length) {\n          this.$form.submit();\n        }\n      }\n    }\n\n    /**\n     * Gets the keywords for the supplied searchBox.\n     *\n     * @param {SearchBox} searchBox The injected search box\n     */\n\n  }, {\n    key: 'filterKeywordsBySearchTerm',\n\n\n    /**\n     * Filter keywords by the contents of the search field.\n     *\n     * @param {string} searchTerm The search term to filter the keywords by\n     * @param {Array} keywords The keywords to filter\n     */\n    value: function filterKeywordsBySearchTerm(keywords, searchTerm) {\n      var matches = void 0;\n      if (searchTerm) {\n        matches = keywords.filter(function (keyword) {\n          return keyword.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1;\n        });\n\n        matches.sort();\n        for (var i = 0; i < matches.length; i += 1) {\n          matches[i] = SearchBox.embolden(matches[i], searchTerm);\n        }\n      }\n\n      return matches;\n    }\n\n    /**\n     * Returns phrase with specified (case insensitive) snippet emboldened.\n     *\n     * @param {string} phrase The phrase containing the text to embolden\n     * @param {string} snippet The substring of phrase to embolden\n     * @returns {string} The phrase with the snippet emboldened\n     */\n\n  }, {\n    key: 'display',\n\n\n    /**\n     * Update the search suggestions based on matches found.\n     *\n     * @param {Array} matches The matches found\n     * @param {HTMLElement} $output Element to contain the display\n     */\n    value: function display(matches, $output) {\n      var outputString = '';\n\n      if ($output) {\n        $output.innerHTML = '';\n        this.nudgeOutputVertically('-47px');\n\n        if (matches && matches.length) {\n          matches.forEach(function (match) {\n            outputString += '<li tabindex=\"0\" class=\"search-box__suggestion\">' + match + '</li>';\n          });\n\n          outputString = '<ul>' + outputString + '</ul>';\n          $output.innerHTML = outputString;\n        }\n      }\n    }\n\n    /**\n     * Uses css transform to translate $output in the vertical axis.\n     *\n     * @param posnInPx The vertical offset to apply\n     */\n\n  }, {\n    key: 'nudgeOutputVertically',\n    value: function nudgeOutputVertically(posnInPx) {\n      var posn = void 0;\n      if (typeof posnInPx === 'string' && posnInPx.indexOf('px') === posnInPx.length - 2) {\n        posn = posnInPx;\n      } else if (!isNaN(posnInPx)) {\n        posn = posnInPx + 'px';\n      }\n\n      utils.updateElementTranslate(this.$output, [0, posn]);\n    }\n\n    /**\n     * Toggle the flag that limits the search.\n     */\n\n  }, {\n    key: 'toggleSearchLimiting',\n    value: function toggleSearchLimiting() {\n      this.isSearchLimited = !this.isSearchLimited;\n    }\n  }], [{\n    key: 'handleKeyEntry',\n    value: function handleKeyEntry(e, searchBox) {\n      var current = e.target;\n      if (e.keyCode && e.keyCode !== 9) {\n        switch (e.keyCode) {\n          case 40:\n            searchBox.nextSuggestion(current);\n            break;\n          case 38:\n            searchBox.prevSuggestion(current);\n            break;\n          case 13:\n            searchBox.useSuggestion(current);\n            break;\n          default:\n            searchBox.display(searchBox.filterKeywordsBySearchTerm(SearchBox.getKeywords(searchBox), searchBox.$input.value), searchBox.$output);\n            if (searchBox.$input.value.length > 0) {\n              searchBox.showResetButton();\n            } else {\n              searchBox.hideResetButton();\n            }\n\n            break;\n        }\n      }\n    }\n  }, {\n    key: 'getKeywords',\n    value: function getKeywords(searchBox) {\n      return searchBox.keywords;\n    }\n\n    /**\n     * Sets the keywords for the supplied searchBox.\n     *\n     * @param {Array} keywords The keywords for the searchBox\n     * @param {SearchBox} searchBox The injected search box\n     */\n\n  }, {\n    key: 'setKeywords',\n    value: function setKeywords(keywords, searchBox) {\n      searchBox.keywords = keywords;\n    }\n  }, {\n    key: 'embolden',\n    value: function embolden(phrase, snippet) {\n      // Don't nest emboldening elements.\n      if (snippet.indexOf('<strong>') > -1) {\n        return phrase;\n      }\n\n      var snippetRx = new RegExp(snippet, 'i');\n      var toEmbolden = phrase.match(snippetRx) ? phrase.match(snippetRx)[0] : null;\n      if (!toEmbolden) {\n        return phrase;\n      }\n\n      return phrase.replace(toEmbolden, '<strong>' + toEmbolden + '</strong>');\n    }\n  }]);\n\n  return SearchBox;\n}();\n\n},{\"../libs/elife-utils\":17}],13:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function SelectNav($elm) {\n    _classCallCheck(this, SelectNav);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.$elm.classList.add('select-nav--js');\n    this.$elm.querySelector('select').addEventListener('change', this.triggerSubmit.bind(this));\n  }\n\n  _createClass(SelectNav, [{\n    key: 'triggerSubmit',\n    value: function triggerSubmit() {\n      this.$elm.submit();\n    }\n  }]);\n\n  return SelectNav;\n}();\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = function () {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  function SiteHeader($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, SiteHeader);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n\n    var SearchBox = require('./SearchBox');\n    var $searchBoxEl = $elm.querySelector('[data-behaviour=\"SearchBox\"]');\n    this.searchBox = new SearchBox($searchBoxEl, this.window, doc);\n    var searchToggle = $elm.querySelector('[rel=\"search\"]');\n    if (!!searchToggle) {\n      this.searchToggle = searchToggle.parentNode;\n      this.searchToggle.addEventListener('click', this.toggleSearchBox.bind(this));\n    }\n\n    this.$pageOverlay = null;\n\n    // N.B. $mainMenu is not part of this component's HTML hierarchy.\n    var mainMenu = doc.querySelector('#mainMenu');\n    if (!!mainMenu) {\n      var MainMenu = require('./MainMenu');\n      this.mainMenu = new MainMenu(mainMenu);\n\n      this.$mainMenuToggle = this.$elm.querySelector('a[href=\"#mainMenu\"]');\n      if (!!this.$mainMenuToggle) {\n        this.mainMenu.moveWithinDom();\n        this.$mainMenuToggle.addEventListener('click', this.toggleMainMenu.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Toggles display of the main menu.\n   */\n\n\n  _createClass(SiteHeader, [{\n    key: 'toggleMainMenu',\n    value: function toggleMainMenu(e) {\n      if (this.mainMenu.isOpen()) {\n        this.mainMenu.close();\n        this.window.removeEventListener('keyup', this.checkForMenuClose.bind(this));\n        this.doc.querySelector('.global-inner').removeEventListener('click', this.checkForMenuClose.bind(this));\n      } else {\n        this.mainMenu.open();\n        this.window.addEventListener('keyup', this.checkForMenuClose.bind(this));\n        this.doc.querySelector('.global-inner').addEventListener('click', this.checkForMenuClose.bind(this));\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }, {\n    key: 'checkForMenuClose',\n    value: function checkForMenuClose(e) {\n      if (e.keyCode === 27 || e.type === 'click') {\n        this.mainMenu.close();\n      }\n    }\n\n    /**\n     * Toggles display of the search box.\n     *\n     * @param {Event} e The event causing the toggle to occur\n     */\n\n  }, {\n    key: 'toggleSearchBox',\n    value: function toggleSearchBox(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (this.searchBoxIsOpen()) {\n        this.closeSearchBox();\n      } else {\n        this.openSearchBox();\n      }\n    }\n\n    /**\n     * Returns true if the search box is currently displayed.\n     *\n     * @returns {boolean} True if the search box is open\n     */\n\n  }, {\n    key: 'searchBoxIsOpen',\n    value: function searchBoxIsOpen() {\n      return this.searchBox.$elm.classList.contains('search-box--shown');\n    }\n\n    /**\n     * Closes the search box.\n     */\n\n  }, {\n    key: 'closeSearchBox',\n    value: function closeSearchBox() {\n      this.searchBox.$elm.classList.remove('search-box--shown');\n      utils.updateElementTranslate(this.searchBox.$elm, [0, '-40px']);\n      if (this.searchBox.$output) {\n        this.searchBox.$output.innerHTML = '';\n      }\n\n      this.searchBox.$input.blur();\n      this.window.removeEventListener('keyup', this.checkForClose.bind(this));\n      this.window.removeEventListener('click', this.checkForClose.bind(this));\n      this.hidePageOverlay();\n    }\n\n    /**\n     * Decides whether to close the search box, based on the supplied event.\n     *\n     * @param e The KeyboardEvent provoking the check.\n     */\n\n  }, {\n    key: 'checkForClose',\n    value: function checkForClose(e) {\n      if (e.keyCode && e.keyCode === 27 || e.type === 'click' && !utils.areElementsNested(this.searchBox.$elm, e.target)) {\n        this.closeSearchBox();\n      }\n    }\n\n    /**\n     * Opens the search box.\n     */\n\n  }, {\n    key: 'openSearchBox',\n    value: function openSearchBox() {\n      var _this = this;\n\n      var myHeight = this.window.getComputedStyle(this.$elm).height;\n      var adjustment = 20;\n      var offsetY = utils.adjustPxString(myHeight, adjustment, 'add');\n\n      // This is set in the site-header.scss.\n      var transitionDurationInMs = 150;\n      utils.updateElementTranslate(this.searchBox.$elm, [0, offsetY]);\n      utils.invertPxString(this.window.getComputedStyle(this.searchBox.$container).height);\n      this.searchBox.$elm.classList.add('search-box--shown');\n      this.window.addEventListener('keyup', this.checkForClose.bind(this));\n      this.window.addEventListener('click', this.checkForClose.bind(this));\n\n      this.window.setTimeout(function () {\n\n        // blur before focus forces the focus, a simple focus doesn't always behave as expected.\n        _this.searchBox.$input.blur();\n        _this.searchBox.$input.focus();\n      }, transitionDurationInMs);\n      this.showPageOverlay();\n    }\n\n    /**\n     * Creates the page overlay.\n     *\n     */\n\n  }, {\n    key: 'createPageOverlay',\n    value: function createPageOverlay() {\n      var className = 'overlay--semi-white';\n\n      if (!this.$pageOverlay) {\n        this.$pageOverlay = this.doc.createElement('div');\n        this.$pageOverlay.classList.add(className);\n      }\n\n      var $target = this.doc.querySelector('.global-inner');\n      $target.insertBefore(this.$pageOverlay, this.doc.querySelector('.site-header').nextElementSibling);\n    }\n\n    /**\n     * Shows the page overlay.\n     */\n\n  }, {\n    key: 'showPageOverlay',\n    value: function showPageOverlay() {\n      if (!this.$pageOverlay) {\n        this.createPageOverlay();\n      }\n\n      this.$pageOverlay.style.display = 'block';\n      this.$pageOverlay.style.height = this.doc.querySelector('.global-inner').getBoundingClientRect().height + 'px';\n    }\n\n    /**\n     * Hides the page overlay.\n     */\n\n  }, {\n    key: 'hidePageOverlay',\n    value: function hidePageOverlay() {\n      this.$pageOverlay.style.display = 'none';\n    }\n  }]);\n\n  return SiteHeader;\n}();\n\n},{\"../libs/elife-utils\":17,\"./MainMenu\":9,\"./SearchBox\":12}],15:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function ViewSelector($elm) {\n    var _window = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n\n    var doc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n    _classCallCheck(this, ViewSelector);\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n    this.$jumpLinks = this.$elm.querySelector('.view-selector__jump_links');\n    this.$jumpLinksToggle = this.$elm.querySelector('.view-selector__jump_links_header');\n    this.cssFixedClassName = 'view-selector--fixed';\n\n    this.mainTarget = this.doc.querySelector('[role=\"main\"]');\n\n    // matches top padding in scss\n    var topSpaceWhenFixed = 30;\n\n    this.elmYOffset = this.$elm.offsetTop - topSpaceWhenFixed;\n    this.window.addEventListener('scroll', this.handleScroll.bind(this));\n    this.$jumpLinksToggle.addEventListener('click', this.toggleJumpLinks.bind(this));\n    this.toggleJumpLinks();\n  }\n\n  _createClass(ViewSelector, [{\n    key: 'handleScroll',\n    value: function handleScroll() {\n\n      // If it's position is fixed\n      if (this.$elm.classList.contains(this.cssFixedClassName)) {\n\n        // Allow it to scroll again if it could keep its position & not scroll off top of screen\n        if (this.window.pageYOffset < this.elmYOffset) {\n          this.$elm.classList.remove(this.cssFixedClassName);\n          return;\n        }\n\n        // Allow it to scroll again if it would otherwise over-/under-lay following element\n        var bottomOfMain = this.mainTarget.getBoundingClientRect().bottom;\n        if (bottomOfMain < this.$elm.offsetHeight) {\n          var amountToNudgeUp = bottomOfMain - this.$elm.offsetHeight;\n          this.$elm.style.top = amountToNudgeUp + 'px';\n          return;\n        }\n\n        // Ensure top of component is not off top of screen once bottom of main is off screen bottom\n        // Safety net: required because a fast scroll may prevent all code running as desired.\n        if (bottomOfMain >= this.window.innerHeight) {\n          this.$elm.style.top = '0px';\n        }\n\n        return;\n      }\n\n      // Otherwise fix its position if it would otherwise scroll off the top of the screen\n      if (this.window.pageYOffset >= this.elmYOffset) {\n        this.$elm.classList.add(this.cssFixedClassName);\n        this.$elm.style.top = '0px';\n      }\n    }\n  }, {\n    key: 'toggleJumpLinks',\n    value: function toggleJumpLinks() {\n      this.$jumpLinks.classList.toggle('visuallyhidden');\n      this.$jumpLinksToggle.classList.toggle('view-selector__jump_links_header--closed');\n      this.handleScroll();\n    }\n  }]);\n\n  return ViewSelector;\n}();\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  function ViewerModal($elm) {\n    _classCallCheck(this, ViewerModal);\n\n    this.$elm = $elm;\n    this.$prev = document.createElement('div');\n    this.$next = document.createElement('div');\n\n    // build the modal\n    this.build();\n\n    // events\n    this.$prev.addEventListener('click', this.prev);\n    this.$next.addEventListener('click', this.next);\n  }\n\n  _createClass(ViewerModal, [{\n    key: 'build',\n    value: function build() {\n      //\n    }\n  }, {\n    key: 'prev',\n    value: function prev(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: 'next',\n    value: function next(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      //\n    }\n  }]);\n\n  return ViewerModal;\n}();\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n  'use strict';\n\n  /**\n   * Builds and returns specified HTML element, optionally adding it to the DOM.\n   *\n   * @param {string} elName Name of the HTML element to build\n   * @param {Array} [cssClasses] CSS class name(s) to set on the element\n   * @param {string} [textContent] Textual content of the element\n   * @param {string|Element} [parent] Parent element to attach to\n   * @param {string|Element|boolean} [attachBefore] Following sibling (1st if true, last if falsey)\n   *\n   * @returns {Element}\n   */\n\n  function buildElement(elName, cssClasses, textContent, parent, attachBefore) {\n\n    var $el = document.createElement(elName);\n    var $parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\n    // Work out what the new element's following sibling will be, based on value of attachBefore.\n    var $followingSibling = function () {\n\n      if (!!attachBefore) {\n\n        if (typeof attachBefore === 'boolean') {\n          return $parent.firstElementChild;\n        } else if (typeof attachBefore === 'string') {\n          return document.querySelector(attachBefore);\n        } else if (attachBefore instanceof HTMLElement) {\n          return attachBefore;\n        }\n      }\n    }();\n\n    if (Array.isArray(cssClasses)) {\n      cssClasses.forEach(function (cssClass) {\n        $el.classList.add(cssClass);\n      });\n    }\n\n    if (textContent) {\n      $el.innerHTML = textContent;\n    }\n\n    if (!!$parent) {\n      // TODO: Handle what happens if following sibling is not a child of parent\n      if (!!$followingSibling) {\n        $parent.insertBefore($el, $followingSibling);\n      } else {\n        $parent.appendChild($el);\n      }\n    }\n\n    return $el;\n  }\n\n  var uniqueIds = function uniqueIds() {\n    var UniqueIdentifiers = function () {\n      function UniqueIdentifiers() {\n        _classCallCheck(this, UniqueIdentifiers);\n\n        this.used = [];\n      }\n\n      _createClass(UniqueIdentifiers, [{\n        key: 'isValid',\n        value: function isValid(candidate, document) {\n          // Compulsory check that id is unique to this object's knowledge.\n          if (this.used.indexOf(candidate) > -1) {\n            return false;\n          }\n\n          // Optional check to see if id is unique in the DOM.\n          if (!!document) {\n            if (!!document.querySelector && typeof document.querySelector === 'function' && document.querySelector('#' + candidate)) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        /**\n         * Gets a unique id with optional prefix.\n         *\n         * @param {string} [prefix] Prefix to use for the id\n         * @param {HTMLDocument} [document] Enables checking for the id's uniqueness within the DOM\n         * @returns {string}\n         */\n\n      }, {\n        key: 'get',\n        value: function get(prefix, document) {\n          var _prefix = '' + prefix || 'default_';\n          var random = ('' + Math.random()).replace(/\\./, '');\n          var candidate = _prefix + random;\n          if (this.isValid(candidate, document)) {\n            this.used.push(candidate);\n            return candidate;\n          }\n\n          this.get(prefix, document);\n        }\n      }]);\n\n      return UniqueIdentifiers;\n    }();\n\n    return new UniqueIdentifiers();\n  }();\n\n  /**\n   * Updates the CSS transform's translate function on the element in a vendor-prefix-aware fashion.\n   *\n   * Because of the way CSS transformations are combined into a matrix, this may not work\n   * as expected if other CSS transformations are also applied to the same element.\n   *\n   * @param {HTMLElement} $el The element to apply the transformation to.\n   * @param {Array} offset The offset for both axes, expressed as [x, y], e.g. [0, '20px']\n   */\n  function updateElementTranslate($el, offset) {\n    if (!($el instanceof HTMLElement && Array.isArray(offset))) {\n      return false;\n    }\n\n    function calcOffset(value) {\n      if (!value) {\n        return '0px';\n      }\n\n      if (typeof value === 'number') {\n        return value + 'px';\n      }\n\n      if (typeof value === 'string') {\n        value += 'px';\n        return value.replace(/((px)+)$/, 'px');\n      }\n    }\n\n    var offsetX = calcOffset(offset[0]);\n    var offsetY = calcOffset(offset[1]);\n\n    var props = ['webkitTransform', 'mozTransform', 'msTransform', 'oTransform', 'transform'];\n    props.forEach(function (prop) {\n      // Only set the vendor prefixed properties where they are supported\n      if ($el.style[prop] !== undefined) {\n        $el.style[prop] = 'translate(' + offsetX + ', ' + offsetY + ')';\n      }\n    });\n  }\n\n  function _getValueFromPxString(pxString) {\n    if (pxString === '0') {\n      return 0;\n    }\n\n    return parseInt(pxString.match(/([-0-9.]+)px/)[1], 10);\n  }\n\n  function _getZeroAwarePxStringFromValue(value) {\n    if (value === 0) {\n      return '' + value;\n    }\n\n    return value + 'px';\n  }\n\n  /**\n   * Add a quantity to a px amount expressed as a string, and return new string with updated value.\n   *\n   * For example: adjustPxString('97px', 8) returns '105px'\n   *\n   * @param {String} pxString The string representing the original quantity, e.g. '97px'\n   * @param adjustment The numeric adjustment to make, e.g. 8\n   * @param operation\n   * @returns {string} The modified value, as a string, e.g.: '105px'\n   */\n  function adjustPxString(pxString, adjustment, requestedOperation) {\n    var originalSize = _getValueFromPxString(pxString);\n    var adjustedSize = originalSize;\n    var operation = 'add';\n    if (['subtract', 'multiply', 'divide'].indexOf(requestedOperation) > -1) {\n      operation = requestedOperation;\n    }\n\n    switch (operation) {\n      case 'add':\n        adjustedSize = originalSize + adjustment;\n        break;\n      case 'subtract':\n        adjustedSize = originalSize - adjustment;\n        break;\n      case 'multiply':\n        adjustedSize = originalSize * adjustment;\n        break;\n      case 'divide':\n        adjustedSize = originalSize / adjustment;\n        break;\n      default:\n        break;\n    }\n    return _getZeroAwarePxStringFromValue(adjustedSize);\n  }\n\n  /**\n   * Invert the px amount expressed as a string, and return new string with inverted value.\n   *\n   * For example: invertPxString('97px') returns '-97px'\n   *\n   * @param {String} pxString The string representing the original quantity, e.g. '97px'\n   * @returns {string} The modified value, as a string, e.g.: '-97px'\n   */\n  function invertPxString(pxString) {\n    var originalSize = _getValueFromPxString(pxString);\n    var adjustedSize = originalSize * -1;\n    return _getZeroAwarePxStringFromValue(adjustedSize);\n  }\n\n  /**\n   * Returns true if $prospectiveDescendant is, or is a descendant of $prospectiveParent.\n   *\n   * @param {Node} $prospectiveParent el to test as a parent of the $prospectiveDescendant\n   * @param {Node} $prospectiveDescendant el to test as descendant of the $prospectiveParent\n   * @returns {boolean} Whether the $prospectiveDescendant is, or descends from $prospectiveParent\n   */\n  function areElementsNested($prospectiveParent, $prospectiveDescendant) {\n    if (!($prospectiveParent instanceof Node && $prospectiveDescendant instanceof Node)) {\n      return false;\n    }\n\n    var relationship = $prospectiveParent.compareDocumentPosition($prospectiveDescendant);\n    return !!(relationship & $prospectiveParent.DOCUMENT_POSITION_CONTAINED_BY || relationship === 0);\n  }\n\n  /**\n   * Returns whether the display is considered to have a high pixel density ratio.\n   *\n   * @param window\n   * @returns {boolean} true if dpr >= 2, false if lower, or unknown.\n   */\n  function isHighDpr(window) {\n    if (!!window.devicePixelRatio) {\n      return window.devicePixelRatio >= 2;\n    }\n\n    return false;\n  }\n\n  return {\n    adjustPxString: adjustPxString,\n    areElementsNested: areElementsNested,\n    buildElement: buildElement,\n    invertPxString: invertPxString,\n    isHighDpr: isHighDpr,\n    uniqueIds: uniqueIds,\n    updateElementTranslate: updateElementTranslate\n  };\n};\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\n// Base level of feature support needed for the js loaded in this file.\n// Consider AJAXing in the rest if the test passes.\n\nif (window.localStorage && document.querySelector && window.addEventListener && !!document.createElement('div').classList) {\n  (function () {\n\n    document.querySelector('html').classList.add('js');\n\n    var Components = {};\n\n    // import modules into the list of Components.\n    Components.AllSubjectsListLink = require('./components/AllSubjectsListLink');\n    Components.ArticleDownloadLinksList = require('./components/ArticleDownloadLinksList');\n    Components.ArticleSection = require('./components/ArticleSection');\n    Components.AudioPlayer = require('./components/AudioPlayer');\n    Components.BackgroundImage = require('./components/BackgroundImage');\n    Components.Carousel = require('./components/Carousel');\n    Components.ContentHeaderArticle = require('./components/ContentHeaderArticle');\n    Components.FragmentHandler = require('./components/FragmentHandler');\n    Components.MainMenu = require('./components/MainMenu');\n    Components.Math = require('./components/Math');\n    Components.MediaChapterListingItem = require('./components/MediaChapterListingItem');\n    Components.SearchBox = require('./components/SearchBox');\n    Components.SelectNav = require('./components/SelectNav');\n    Components.SiteHeader = require('./components/SiteHeader');\n    Components.ViewerModal = require('./components/ViewerModal');\n    Components.ViewSelector = require('./components/ViewSelector');\n\n    // App\n    var Elife = function Elife() {\n\n      var singletons = function () {\n        var registered = [];\n\n        function isRegistered(componentName) {\n          return registered.indexOf(componentName) > -1;\n        }\n\n        function register(componentName) {\n          registered.push(componentName);\n        }\n\n        return {\n          isRegistered: isRegistered,\n          register: register\n        };\n      }();\n\n      function initialiseComponent($component) {\n        // When present, data-behaviour contains a space-separated list of handlers for that component\n        var handlers = $component.getAttribute('data-behaviour').trim().split(' ');\n        for (var i = 0; i < handlers.length; i += 1) {\n          var handler = handlers[i];\n          if (!singletons.isRegistered(handler)) {\n            if (!!Components[handler] && typeof Components[handler] === 'function') {\n              new Components[handler]($component, window, window.document);\n            }\n\n            if (typeof Components[handler].isSingleton === 'function' && Components[handler].isSingleton()) {\n              singletons.register(handler);\n            }\n          }\n        }\n      }\n\n      var components = document.querySelectorAll('[data-behaviour]');\n      if (components) {\n        [].forEach.call(components, initialiseComponent);\n      }\n    };\n\n    new Elife();\n  })();\n}\n\n},{\"./components/AllSubjectsListLink\":1,\"./components/ArticleDownloadLinksList\":2,\"./components/ArticleSection\":3,\"./components/AudioPlayer\":4,\"./components/BackgroundImage\":5,\"./components/Carousel\":6,\"./components/ContentHeaderArticle\":7,\"./components/FragmentHandler\":8,\"./components/MainMenu\":9,\"./components/Math\":10,\"./components/MediaChapterListingItem\":11,\"./components/SearchBox\":12,\"./components/SelectNav\":13,\"./components/SiteHeader\":14,\"./components/ViewSelector\":15,\"./components/ViewerModal\":16}]},{},[18])\n\n","'use strict';\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = class ArticleDownloadLinksList {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    // One statement per class name because IE doesn't support multiple strings, comma separated.\n    this.$elm.classList.add('article-download-links-list--js');\n    this.$elm.classList.add('visuallyhidden');\n    this.moveList();\n    this.$toggler = this.doc.querySelector('.content-header__download_link');\n    this.$toggler.addEventListener('click', this.toggle.bind(this));\n  }\n\n  /**\n   * Moves the download links list to be by the icon this.$toggler\n   */\n  moveList() {\n    let $newParent = this.doc.querySelector('.content-header_top');\n    let $followingSibling =\n      $newParent.querySelector('.content-header__download_link').nextElementSibling;\n    this.$elm.parentNode.parentNode.classList.add('visuallyhidden');\n    $newParent.insertBefore(this.$elm, $followingSibling);\n  }\n\n  /**\n   * Toggles the download links list display.\n   *\n   * @param e The event triggering the display toggle\n   */\n  toggle(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n\n  }\n\n  /**\n   * Returns whether links list is currently viewable.\n   *\n   * @returns {boolean} Whether links list is currently viewable\n   */\n  isOpen() {\n    return !this.$elm.classList.contains('visuallyhidden');\n  }\n\n  /**\n   * Make viewable.\n   */\n  open() {\n    this.$elm.classList.remove('visuallyhidden');\n    this.window.addEventListener('click', this.checkForClose.bind(this));\n  }\n\n  /**\n   * Checks whether a click occurred outside this, and close this if it did.\n   *\n   * @param e The click event to evaluate the target of\n   */\n  checkForClose(e) {\n    if (!utils.areElementsNested(this.$elm, e.target)) {\n      this.close();\n    }\n  }\n\n  /**\n   * Make unviewable.\n   */\n  close() {\n    this.$elm.classList.add('visuallyhidden');\n    this.window.removeEventListener('click', this.checkForClose.bind(this));\n  }\n\n};\n","'use strict';\n\nmodule.exports = class ArticleSection {\n\n  constructor($elm, _window = window, doc = document) {\n\n    if ($elm.classList.contains('article-section--first')) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n\n    this.thresholdWidth = 600;\n    this.initialise(this.$elm, doc);\n  }\n\n  initialise($elm, doc) {\n    this.$elm.classList.add('article-section--js');\n    this.$headerLink = this.createHeaderLink($elm, doc);\n    this.$body = $elm.querySelector('.article-section__body');\n    this.setInitialState($elm, this.$headerLink, this.$body);\n    this.$elm.addEventListener('expandsection', this.expand.bind(this));\n  }\n\n  createHeaderLink($elm, doc) {\n    let $header = $elm.querySelector('.article-section__header');\n    let $link = doc.createElement('A');\n    $link.setAttribute('href', '#');\n    $link.classList.add('article-section__header_link');\n    $link.appendChild($header.firstElementChild);\n    $header.appendChild($link);\n    $link.addEventListener('click', this.toggleState.bind(this));\n    return $link;\n  }\n\n  setInitialState($elm, $headerLink, $body) {\n    if ($elm.dataset.initialState === 'closed' || this.viewportNoWiderThan(this.thresholdWidth)) {\n      $elm.classList.add('article-section--collapsed');\n      $headerLink.classList.add('article-section__header_link--closed');\n      $body.classList.add('visuallyhidden');\n    } else {\n      // Defensive: remove classes if they turn up here when they shouldn't\n      $headerLink.classList.remove('article-section__header_link--closed');\n      $body.classList.remove('visuallyhidden');\n    }\n\n  }\n\n  viewportNoWiderThan(thresholdInPx) {\n    return this.window.matchMedia('(max-width: ' + thresholdInPx + 'px)').matches;\n  }\n\n  toggleState(e) {\n    e.preventDefault();\n    this.$headerLink.classList.toggle('article-section__header_link--closed');\n    this.$elm.classList.toggle('article-section--collapsed');\n    this.$body.classList.toggle('visuallyhidden');\n    if (!this.$body.classList.contains('visuallyhidden') && !!this.window.MathJax) {\n      this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub, this.$elm.id]);\n    }\n  }\n\n  expand(e) {\n    this.$headerLink.classList.remove('article-section__header_link--closed');\n    this.$elm.classList.remove('article-section--collapsed');\n    this.$body.classList.remove('visuallyhidden');\n    if (!!this.window.MathJax) {\n      this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub, this.$elm.id]);\n    }\n\n    let $descendentEl = this.doc.querySelector('#' + e.detail);\n    if (!!$descendentEl) {\n      $descendentEl.scrollIntoView();\n    }\n  }\n\n};\n","'use strict';\nvar utils = require('../libs/elife-utils')();\nmodule.exports = class AudioPlayer {\n\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      console.warn('No element provided');\n      return;\n    }\n\n    this.window = _window;\n    if (!this.window.HTMLAudioElement) {\n      console.warn('Audio element not supported');\n      return;\n    }\n\n    console.log('Initialising Audio Player...');\n\n    this.$elm = $elm;\n    this.$audioElement = this.$elm.querySelector('audio');\n    if (!this.$audioElement) {\n      console.warn('No audio element found');\n      return;\n    }\n\n    this.uniqueId = utils.uniqueIds.get('audio', doc);\n    this.$elm.id = this.uniqueId;\n    this.$playButton = AudioPlayer.buildPlayButton(this);\n    this.$icon = this.$playButton.querySelector('.audio-player__toggle_play_icon');\n\n    // $title must be prepared before buildProgressIndicator is called\n    this.$title = this.prepare$title(this.$elm.querySelector('.audio-player__header'), doc);\n    this.$progressTrack = AudioPlayer.buildProgressIndicator(this);\n    this.$progressBar = this.$progressTrack.querySelector('[class*=\"progress_bar\"]');\n    this.$timeIndicators = AudioPlayer.buildTimeIndicators(this);\n    this.$currentTime = this.$timeIndicators.querySelector('[class*=\"current_time\"]');\n    this.$duration = this.$timeIndicators.querySelector('[class*=\"duration\"]');\n\n    // state\n    this.duration = null;\n    this.isPlaying = false;\n\n    this.$elm.classList.add('audio-player--js');\n\n    this.$playButton.classList.add('loading');\n    this.$audioElement.addEventListener('loadedmetadata', () => {\n      this.playerReady(this);\n    });\n\n    this.usingMetadata = false;  // set to true in loadMetadata if no errors thrown\n    this.loadMetadata(this.$elm.dataset.episodeNumber);\n\n  }\n\n  playerReady(player) {\n    player.duration = player.$audioElement.duration;\n    player.$duration.innerHTML = AudioPlayer.secondsToMinutes(player.duration);\n    player.$playButton.addEventListener('click', () => {\n      player.togglePlay(player.$audioElement, player.$playButton);\n    }, false);\n    player.$audioElement.addEventListener('timeupdate', player.update.bind(player));\n    player.window.addEventListener('hashchange', player.seekNewTime.bind(player));\n    player.window.addEventListener('load', player.seekNewTime.bind(player));\n    this.$playButton.classList.remove('loading');\n\n    let playerReady;\n    try {\n      playerReady = new CustomEvent('playerReady', { detail: this.uniqueId });\n    } catch (e) {\n      // CustomEvent not supported, do it the old fashioned way\n      playerReady = document.createEvent('playerReady');\n      playerReady.initCustomEvent('playerReady', true, true, { detail: this.uniqueId });\n    }\n\n    player.window.dispatchEvent(playerReady);\n\n  }\n\n  prepare$title(parent, doc) {\n    let span = doc.createElement('span');\n    try {\n      span.innerHTML = parent.innerHTML;\n    } catch (e) {\n      return;\n    }\n\n    span.classList.add('audio-player__title');\n    parent.innerHTML = '';\n    parent.appendChild(span);\n    return span;\n  }\n\n  /**\n   * Converts seconds to a display of minutes & seconds.\n   *\n   * @param {Number} seconds The time to convert, in seconds\n   * @returns {string} The time in a [m]m:ss string\n   */\n  static secondsToMinutes(seconds) {\n    let _seconds = parseInt(seconds, 10);\n    let mins = Math.floor(_seconds / 60);\n    let secs = _seconds % 60;\n    if (secs <= 9) {\n      secs = '0' + secs;\n    }\n\n    return `${mins}:${secs}`;\n  }\n\n  //noinspection JSValidateJSDoc\n  /**\n   * Toggles play/pause state of media file.\n   *\n   * @param {HTMLAudioElement} $audioElement The audio element to toggle the play state of\n   * @param {HTMLButtonElement} $togglePlayButton The button controlling the playback\n   */\n  togglePlay($audioElement, $togglePlayButton) {\n    if (this.isPlaying) {\n      this.pause($audioElement, $togglePlayButton);\n    } else {\n      this.play($audioElement, $togglePlayButton);\n    }\n  }\n\n  play($audioElement, $togglePlayButton) {\n    $audioElement.play();\n    AudioPlayer.updateIconState(this.$icon, 'pause');\n    $togglePlayButton.classList.add('audio-player__toggle_play--pauseable');\n    $togglePlayButton.classList.remove('audio-player__toggle_play--playable');\n    this.isPlaying = true;\n  }\n\n  pause ($audioElement, $togglePlayButton) {\n    $audioElement.pause();\n    AudioPlayer.updateIconState(this.$icon, 'play');\n    $togglePlayButton.classList.add('audio-player__toggle_play--playable');\n    $togglePlayButton.classList.remove('audio-player__toggle_play--pauseable');\n    this.isPlaying = false;\n  }\n\n  /**\n   * Update the progress bar and elapsed time indicator based on track's current time.\n   */\n  update() {\n    let currentTime = Math.floor(this.$audioElement.currentTime);\n    let pc = (currentTime / this.duration) * 100;\n    let currentTime2Dis = AudioPlayer.secondsToMinutes(currentTime);\n    this.$progressBar.style.width = `${pc}%`;\n    this.$currentTime.innerHTML = currentTime2Dis;\n\n    if (this.usingMetadata) {\n      let chapterNumberOnLastUpdate = this.getCurrentChapterNumber();\n      this.setCurrentChapterMetadata(this.getChapterMetadataAtTime(currentTime,\n                                                                   this.chapterMetadata));\n      if (this.getCurrentChapterMetadata().number !== chapterNumberOnLastUpdate) {\n        this.changeChapter(this.getCurrentChapterNumber(),\n                           this.getCurrentChapterMetadata().title,\n                           this.$elm);\n      }\n    }\n\n    if (this.$audioElement.ended) {\n      AudioPlayer.updateIconState(this.$icon, 'play');\n      this.isPlaying = false;\n    }\n  }\n\n  /**\n   * Updates player title with chapter number & name, and dispatches chapterChanged event.\n   *\n   * @param {int} number New chapter number Used as value of detail property of\n   * @param {String} title new chapter title\n   * @param {HTMLElement} $elm Element from which to dispatch the event\n   */\n  changeChapter(number, title, $elm) {\n    this.setTitle(this.episodeTitle, title);\n    let chapterChanged;\n    try {\n      chapterChanged = new CustomEvent('chapterChanged', { detail: number });\n    } catch (e) {\n      // CustomEvent not supported, do it the old fashioned way\n      chapterChanged = document.createEvent('chapterChanged');\n      chapterChanged.initCustomEvent('chapterChanged', true, true, { detail: number });\n    }\n\n    $elm.dispatchEvent(chapterChanged);\n  }\n\n  /**\n   * Updates the icon state for the play button.\n   *\n   * @param $icon {HTMLImageElement} The img to update\n   * @param state {string} The state to update to (either 'play' or 'pause')\n   */\n  static updateIconState($icon, state) {\n    if (state !== 'play' && state !== 'pause') {\n\n      return;\n    }\n\n    $icon.src = AudioPlayer.getIconPath((state));\n    $icon.alt = state;\n  }\n\n  seekNewTime(e) {\n    var hash;\n    var shouldPlay = false;\n    try {\n      hash = e.newURL.substring(e.newURL.indexOf('#') + 1);\n\n      // Should play when chapter changed within the page, but not autoplay on page load :-)\n      shouldPlay = true;\n    } catch (e) {\n      // newURL only available on hashchange event, but load event may also invoke this handler\n      hash = this.window.location.hash.substring(1);\n      shouldPlay = false;\n    }\n\n    if (!isNaN(hash) && hash >= 0) {\n      this.seek(hash, this.$audioElement);\n      if (!this.isPlaying && shouldPlay) {\n        this.play(this.$audioElement, this.$playButton);\n      }\n    }\n  }\n\n  /**\n   * Event handler to determine track seek time in response to user interaction.\n   *\n   * @param e The user-generated click event\n   * @param {AudioPlayer} player The audio player object that the new element belongs to\n   */\n  handleSeek(e, player) {\n    var newSeekPosition = parseInt(e.offsetX, 10);\n    var availableWidth = player.$progressTrack.clientWidth;\n    var durationProportionToSeek = (newSeekPosition / parseInt(availableWidth, 10));\n    this.seek(durationProportionToSeek * player.duration, player.$audioElement);\n  }\n\n  //noinspection JSValidateJSDoc\n  /**\n   * Seeks a particular time in the media file.\n   *\n   * @param {Number} time The time to seek\n   * @param {HTMLAudioElement} $audioElement The audio element to toggle the play state of\n   */\n  seek(time, $audioElement) {\n    $audioElement.currentTime = time;\n    this.update();\n  }\n\n  /**\n   * Builds the progress indicator.\n   *\n   * @param {AudioPlayer} player The audio player object that the new element belongs to\n   * @returns {Element} The progress indicator\n   */\n  static buildProgressIndicator(player) {\n    var $barWrapper = utils.buildElement('div',\n                               ['audio-player__progress'],\n                               '',\n                               '#' + player.uniqueId + ' [class*=\"audio-player__container\"]');\n\n    utils.buildElement('div', ['audio-player__progress_bar'], '', $barWrapper);\n\n    $barWrapper.addEventListener('click', function (e) {\n      player.handleSeek(e, player);\n    }, false);\n\n    return $barWrapper;\n  }\n\n  /**\n   * Builds the play button.\n   *\n   * @param {AudioPlayer} player The audio player object that the new element belongs to\n   * @returns {Element} The play/pause button\n   */\n  static buildPlayButton(player) {\n    var $button = utils.buildElement('button',\n                              ['audio-player__toggle_play'],\n                              '',\n                              '#' + player.uniqueId + ' [class*=\"audio-player\"]',\n                              true);\n    var $image = utils.buildElement('img',\n                       ['audio-player__toggle_play_icon'],\n                       '',\n                       $button);\n    $image.src = AudioPlayer.getIconPath('play');\n    $image.alt = 'Play';\n    return $button;\n  }\n\n  /**\n   * Builds the current time and duration indicators.\n   *\n   * @param {AudioPlayer} player The audio player object that the new element belongs to\n   * @returns {Element} An element containing the current time and duration indicators.\n   */\n  static buildTimeIndicators(player) {\n    var playerId = player.uniqueId;\n    var $container = utils.buildElement('div',\n                                        ['audio-player__times'],\n                                        '',\n                                        '#' + playerId + ' [class*=audio-player__header]',\n                                        true);\n\n    utils.buildElement('span', ['audio-player__current_time'], '0:00', $container);\n    utils.buildElement('span', ['audio-player__duration'], '0:00', $container);\n    return $container;\n  }\n\n  static getIconPath(iconName) {\n\n    if (iconName !== 'play' && iconName !== 'pause') {\n      return;\n    }\n\n    return `../../assets/img/icons/audio-${iconName}.svg`;\n  }\n\n  /**\n   * Set the title based on both episode and chapter titles\n   * @param episodeTitle\n   * @param chapterTitle\n   */\n  setTitle(episodeTitle, chapterTitle) {\n    this.title = episodeTitle;\n    if (!!chapterTitle) {\n      this.title += ': ' + chapterTitle;\n    }\n\n    this.$title.innerHTML = this.title;\n  }\n\n  getCurrentChapterMetadata() {\n    return this.currentChapterMetadata;\n  }\n\n  setCurrentChapterMetadata(metadata) {\n    this.currentChapterMetadata = metadata;\n  }\n\n  getCurrentChapterNumber() {\n    return this.getCurrentChapterMetadata().number || 0;\n  }\n\n  /**\n   * Returns a chapter's title and number, based on the playback position\n   * @param time\n   * @param {Array} chapterMetadata\n   * An array of objects that must contain as a minimum\n   * @returns {*}\n   */\n  getChapterMetadataAtTime(time, chapterMetadata) {\n    if (!chapterMetadata) {\n      return '';\n    }\n\n    let chapterTitle = '';\n    let chapterNumber = 0;\n    chapterMetadata.forEach(function (chapter, i, chapters) {\n      let chapterStartTime = parseInt(chapter.time, 10);\n      let nextChapterStartTime = i < chapters.length - 1 ? chapters[i + 1].time : null;\n      if (time >= chapterStartTime) {\n        if (!nextChapterStartTime || time < nextChapterStartTime) {\n          chapterTitle = chapter.title;\n          chapterNumber = chapter.number;\n        }\n      }\n    });\n\n    return {\n      title: chapterTitle,\n      number: chapterNumber\n    };\n  }\n\n  /**\n   * Sets episode title and respective chapter information from metadata\n   * @param metadata\n   */\n  processMetadata(metadata) {\n    this.episodeTitle = 'Episode ' + metadata.number;\n    this.setTitle(this.episodeTitle);\n\n    this.chapterMetadata = this.prepareChapterMetadata(metadata);\n    this.currentChapterMetadata = { number: 0, title: '' };\n  }\n\n  /**\n   * Returns array of objects describing respective chapter information\n   * @param metadata\n   * @returns {Array} of objects containing time, number and title properties\n   */\n  prepareChapterMetadata(metadata) {\n    let chapterMetadata = [];\n    metadata.chapters.forEach((chapter) => {\n      chapterMetadata.push(\n        {\n          time: chapter.time,\n          number: chapter.number,\n          title: chapter.number + '. ' + chapter.title\n        }\n      );\n    });\n\n    return chapterMetadata;\n  }\n\n  /**\n   * Metadata is expected in the data-metadata attribute of $elm as a JSON-like string with single-\n   * quoted instead of double-quoted values.\n   */\n  loadMetadata() {\n    try {\n      this.processMetadata(JSON.parse(this.$elm.dataset.metadata.replace(/'/g, '\"')));\n      this.usingMetadata = true;\n    } catch (e) {\n      console.error(e);\n      this.usingMetadata = false;\n    }\n  }\n};\n","'use strict';\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = class BackgroundImage {\n\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    this.sourceToUse = null;\n    this.thresholdWidth = parseInt(this.$elm.dataset.thresholdWidth, 10);\n    if (this.isValidThreshold(this.thresholdWidth) &&\n        !this.isThresholdMet(this.thresholdWidth, this.window.innerWidth)) {\n      this.window.addEventListener('resize', this.resizeHandler.bind(this));\n    } else {\n      this.init();\n    }\n\n  }\n\n  init() {\n    this.sourceToUse = this.calcSourceToUse(this.$elm, utils.isHighDpr(this.window));\n    this.setDarkBackground();\n    this.setupEventHandlers(this.$elm,\n                            this.setLightBackground.bind(this),\n                            this.setDarkBackground.bind(this));\n  }\n\n  isValidThreshold(candidate) {\n    return !(\n      typeof candidate === 'boolean' ||\n      candidate === null ||\n      Array.isArray(candidate) ||\n      isNaN(candidate) ||\n      candidate < 0\n    );\n\n  }\n\n  isThresholdMet(threshold, viewportWidth) {\n    return viewportWidth >= threshold;\n  }\n\n  resizeHandler() {\n    if (this.isThresholdMet(this.thresholdWidth, this.window.innerWidth)) {\n      this.window.removeEventListener('resize', this.resizeHandler.bind(this));\n      this.init();\n    }\n  }\n\n  setupEventHandlers($elm, setLightBackground, setDarkBackground) {\n    if ($elm.getAttribute('data-invert-bgcol-on-hover') !== null) {\n      $elm.addEventListener('mouseenter', setLightBackground);\n      $elm.addEventListener('mouseleave', setDarkBackground);\n    }\n  }\n\n  setDarkBackground() {\n    if (!!this.sourceToUse) {\n      this.$elm.style.backgroundImage = this.getBackgroundImagesString(this.sourceToUse,\n                      'linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))');\n      this.$elm.style.color = '#fff';\n    }\n  }\n\n  setLightBackground() {\n    if (!!this.sourceToUse) {\n      this.$elm.style.backgroundImage = this.getBackgroundImagesString(this.sourceToUse,\n                     'linear-gradient(to top, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5))');\n      this.$elm.style.color = '#212121';\n    }\n  }\n\n  getBackgroundImagesString(path, grandient) {\n    if (!path || !path.length || path.length === 0) {\n      return '';\n    }\n\n    return grandient + ', url(' + path + ')';\n  }\n\n  calcSourceToUse(sourceDefiner, isHighDpr) {\n    var lowResSource = '';\n    var highResSource = '';\n    if (!sourceDefiner) {\n      return '';\n    }\n\n    if (!!sourceDefiner.dataset) {\n      highResSource = sourceDefiner.dataset.highResImageSource;\n      lowResSource = sourceDefiner.dataset.lowResImageSource;\n    } else {\n      highResSource = sourceDefiner.getAttribute('data-highResImageSource');\n      lowResSource = sourceDefiner.getAttribute('data-lowResImageSource');\n    }\n\n    if (isHighDpr && !highResSource || !isHighDpr && !lowResSource) {\n      return '';\n    }\n\n    if (isHighDpr) {\n      return highResSource;\n    }\n\n    return lowResSource;\n  }\n\n};\n","'use strict';\n\nconst utils = require('../libs/elife-utils')();\n\nmodule.exports = class Carousel {\n\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n\n    this.moveableStage = this.$elm.querySelector('.carousel__items');\n    this.originalSlideWrappers = this.moveableStage.querySelectorAll('.carousel__item_wrapper');\n    this.originalSlideCount = this.originalSlideWrappers.length;\n    this.currentSlideCount = this.originalSlideCount;\n\n    if (this.originalSlideCount < 2) {\n      return;\n    }\n\n    this.init();\n\n  }\n\n  init() {\n    this.currentSlide = 1;\n    this.timerInterval = 10000;\n\n    this.$elm.querySelector('.carousel__heading').classList.add('visuallyhidden');\n    this.$elm.appendChild(this.buildVisibleControls());\n    this.$toggler = this.buildControl$toggle();\n    this.$elm.insertBefore(this.$toggler, this.$elm.querySelector('.carousel__items'));\n    this.updateWidth();\n    this.updateControlPanel(this.currentSlide);\n    this.togglePlay(this.$toggler);\n    this.$toggler.focus();\n\n    this.window.addEventListener('keydown', this.handleKey.bind(this));\n    this.window.addEventListener('blur', this.cancelTimer.bind(this));\n    this.window.addEventListener('focus', this.setupTimer.bind(this));\n    this.window.addEventListener('resize', () => {\n      this.updateWidth();\n      this.adjustTranslateForResize();\n    });\n    this.makeSingleSlideATVisible(this.currentSlide);\n  }\n\n  atHide($node) {\n    $node.setAttribute('tabindex', -1);\n    $node.setAttribute('aria-hidden', true);\n  }\n\n  atShow($node) {\n    $node.removeAttribute('tabindex', -1);\n    $node.removeAttribute('aria-hidden', true);\n  }\n\n  setATVisibility($root, show) {\n    let action;\n    if (show) {\n      action = this.atShow;\n    } else {\n      action = this.atHide;\n    }\n\n    action.call(this, $root);\n    [].forEach.call($root.childNodes, ($descendant) => {\n      if ($descendant.nodeType === $descendant.ELEMENT_NODE) {\n        action.call(this, $descendant);\n        if ($descendant.hasChildNodes())  {\n          this.setATVisibility($descendant, show);\n        }\n      }\n    });\n  }\n\n  makeSingleSlideATVisible(slideNumber) {\n    [].forEach.call(this.moveableStage.querySelectorAll('.carousel__item_wrapper'), ($el) => {\n      this.setATVisibility($el, false);\n    });\n    let _slideNumber = slideNumber || 1;\n    let slide = this.$elm.querySelectorAll('.carousel-item')[_slideNumber - 1];\n    this.setATVisibility(slide, true);\n    slide.focus();\n  }\n\n  /**\n   * Builds and returns all controls for the carousel\n   *\n   * @returns {Element} The control panel\n   */\n  buildVisibleControls() {\n    // Btn wrappers needed to reserve space in case buttons are removed, to stop things moving about\n    let $previousWrapper = this.buildControl$traverser('previous');\n    let $nextWrapper = this.buildControl$traverser('next');\n\n    this.buttons = {\n      previous: $previousWrapper.querySelector('button'),\n      next: $nextWrapper.querySelector('button')\n    };\n\n    // switches are the circular buttons for depicting/going to a slide\n    this.switches = this.buildControl$switches(this.originalSlideCount);\n\n    let $controlPanel = utils.buildElement('div', ['carousel__control_panel']);\n    let $visibleControlsWrapper = utils.buildElement('div', ['carousel__control_panel__visible']);\n    let visibleControls = [$previousWrapper, this.switches, $nextWrapper];\n    visibleControls.forEach(function (control) {\n      $visibleControlsWrapper.appendChild(control);\n    });\n\n    $controlPanel.appendChild($visibleControlsWrapper);\n\n    return $controlPanel;\n  }\n\n  /**\n   * Returns a div-wrapped button for a next or previous control, with event listener\n   *\n   * @param {String} direction 'previous' | 'next'\n   * @returns {Element} A div-wrapped button\n   */\n  buildControl$traverser(direction) {\n    let _direction = direction === 'previous' ? 'previous' : 'next';\n    let text = direction + ' item';\n    let $wrapper = utils.buildElement('div', ['carousel__control_wrapper']);\n    let $button = utils.buildElement('button',\n                                     ['carousel__control',\n                                      'carousel__control--traverse',\n                                      'carousel__control--' + _direction\n                                     ],\n                                     '',\n                                     $wrapper);\n    $button.addEventListener('click', () => {\n      this.userInitiatedProgression(this[_direction]);\n    });\n\n    utils.buildElement('span', ['visuallyhidden'], text, $button);\n    return $wrapper;\n  }\n\n  /**\n   * Builds and returns a visually hidden play/pause toggle (button & label), with event listener\n   *\n   * @returns {Element} The toggler\n   */\n  buildControl$toggle() {\n    let $button = utils.buildElement('button', ['carousel__control--toggler', 'visuallyhidden'],\n                                     'Play carousel');\n    $button.setAttribute('aria-label', 'The carousel is now paused. Play carousel');\n    $button.addEventListener('click', () => {\n      this.togglePlay($button);\n    });\n    return $button;\n  }\n\n  /**\n   * Builds and returns a list of switches, with event listener attached\n   *\n   * @param quantity The number of switches to build\n   * @returns {Element} The list of switches\n   */\n  buildControl$switches(quantity) {\n    let $switches = utils.buildElement('ol', ['carousel__control_switches']);\n    for (let i = 1; i <= quantity; i += 1) {\n      $switches.appendChild(this.buildControl$switch('Go to item ' + i + ' of ' +\n                                                     this.originalSlideCount, i));\n    }\n\n    $switches.addEventListener('click', this.activateSwitch.bind(this));\n    return $switches;\n  }\n\n  /**\n   * Builds and returns a switch\n   * @param text The next for the switch (visually hidden)\n   * @returns {Element} The switch\n   */\n  buildControl$switch(text, index) {\n    let $item = utils.buildElement('li', ['carousel__control--switch-item']);\n    let $button =  utils.buildElement('button',\n                                      [\n                                        'carousel__control',\n                                        'carousel__control--switch'\n                                      ],\n                                      '',\n                                      $item);\n    let $switch = utils.buildElement('span', ['visuallyhidden'], '' + index, $button);\n    $switch.setAttribute('aria-label', text);\n    return $item;\n  }\n\n  /**\n   * Toggles the play/pause state of the carousel based on the current value of the toggle button.\n   *\n   * @param $button The toggler\n   */\n  togglePlay($button) {\n    let currentButtonState = $button.innerHTML;\n    if (currentButtonState === 'Pause carousel') {\n      $button.innerHTML = 'Play carousel';\n      $button.setAttribute('aria-label', 'The carousel is now paused. Play carousel');\n      this.timerStopped = true;\n      this.cancelTimer();\n    } else {\n      $button.innerHTML = 'Pause carousel';\n      $button.setAttribute('aria-label', 'The carousel is now playing. Pause carousel');\n      this.timerStopped = false;\n      this.setupTimer();\n    }\n  }\n\n  cancelTimer() {\n    this.window.clearInterval(this.timer);\n  }\n\n  setupTimer() {\n    // make sure old timer stopped before starting a new one\n    this.cancelTimer();\n\n    // Indicates whether timer should run at all on this carousel (hard stop, not pause).\n    this.timerStopped = false;\n    this.timer = this.startNewAdvancementTimer(this.timerInterval);\n\n    // mousing over the carousel cancels the timer\n    this.$elm.addEventListener('mouseenter', this.cancelTimer.bind(this));\n\n    // mouse out from the carousel resets the timer\n    this.$elm.addEventListener('mouseleave', () => {\n      this.cancelTimer();\n      if (!this.timerStopped) {\n        this.timer = this.startNewAdvancementTimer(this.timerInterval);\n      }\n    });\n  }\n\n  startNewAdvancementTimer(intervalInMs) {\n    return this.window.setInterval(() => {\n      if (!this.timerStopped) {\n        this.next();\n      }\n    }, intervalInMs);\n  }\n\n  handleKey(e) {\n    let code = e.keyCode || e.charCode;\n    if (code === 37/*left arrow*/ || code === 39/*right arrow*/) {\n      this.timerStopped = true;\n      if (code === 37) {\n        this.userInitiatedProgression(this.previous);\n      } else {\n        this.userInitiatedProgression(this.next);\n      }\n    }\n  }\n\n  userInitiatedProgression(callback) {\n    // Any user-activation of a control permanently stops the timer\n    this.timerStopped = true;\n    if (!!callback && typeof callback === 'function') {\n      callback.call(this, true);\n    }\n  }\n\n  next() {\n    if (this.currentSlide % this.originalSlideCount === 0) {\n      this.extendStage();\n    }\n\n    this.updateSlide();\n    this.updateControlPanel(this.currentSlide);\n  }\n\n  previous() {\n    if (this.currentSlide > 1) {\n      this.updateSlide('previous');\n      this.updateControlPanel(this.currentSlide);\n    }\n  }\n\n  extendStage () {\n    // Make room for another slide set\n    this.currentSlideCount += this.originalSlideCount;\n    this.updateWidth();\n\n    // Clone in the new slide set\n    [].forEach.call(this.originalSlideWrappers, (slide) => {\n      this.moveableStage.appendChild(slide.cloneNode(true));\n    });\n  }\n\n  /**\n   * Translates moveableStage 1 slide's width in the appropriate direction\n   * @param {String} direction 'next' | 'previous' Direction to move\n   */\n  updateSlide(direction) {\n    let currentOffset = this.getCurrentOffset();\n    let currentWidthStringMatch = this.window.getComputedStyle(this.$elm).width\n                                      .match(/^([0-9]+)px/);\n    let currentCarouselWidth = this.window.parseInt(currentWidthStringMatch[1], 10);\n    let newOffset;\n    if (direction === 'previous') {\n      this.currentSlide -= 1;\n      newOffset = currentOffset + currentCarouselWidth;\n    } else {\n      this.currentSlide += 1;\n      newOffset = currentOffset - currentCarouselWidth;\n    }\n\n    utils.updateElementTranslate(this.moveableStage, [newOffset + 'px', 0]);\n  }\n\n  /**\n   * Returns the current numerical value of moveableStage's X translation in px\n   *\n   * @returns {number} Numerical value of the X translation of moveableStage\n   */\n  getCurrentOffset() {\n    let offsetStringMatch = this.moveableStage.style.transform.match(/translate\\((.*)px,[^)]+\\)/);\n    if (!offsetStringMatch) {\n      return 0;\n    }\n\n    return this.window.parseInt(offsetStringMatch[1], 10);\n  }\n\n  updateControlPanel(currentSlide) {\n    this.hideInvalidButtonChoice(currentSlide);\n    this.updateActiveSwitch(currentSlide);\n  }\n\n  /**\n   * Hides previous button if on first slide.\n   *\n   * @param {number} currentSlide The number of the current slide\n   */\n  hideInvalidButtonChoice(currentSlide) {\n    this.buttons.previous.classList.remove('hidden');\n    this.buttons.next.classList.remove('hidden');\n    let logicalSlideNumber = this.getLogicalSlideNumber(currentSlide);\n    if (logicalSlideNumber === 1) {\n      this.buttons.previous.classList.add('hidden');\n    } else if (logicalSlideNumber === this.originalSlideCount) {\n      this.buttons.next.classList.add('hidden');\n    }\n  }\n\n  /**\n   * Activate the switch indicating the current logical slide\n   *\n   * @param {number} currentSlide The number of the current slide\n   */\n  updateActiveSwitch(currentSlide) {\n    let currentLogicalSlide = this.getLogicalSlideNumber(currentSlide);\n    [].forEach.call(this.switches.querySelectorAll('.carousel__control--switch'), (aSwitch, i) => {\n      if (i === currentLogicalSlide - 1) {\n        aSwitch.classList.add('active');\n      } else {\n        aSwitch.classList.remove('active');\n      }\n    });\n  }\n\n  /**\n   * Returns the number of the side within its set.\n   *\n   * E.g. where there's 3 slides in a set, and the actualSlideNumber is 8, this indicates that it's\n   * the 2nd slide in the 3rd slide set, so its logical number is 2.\n   * (A slide set is a clone of the starting slides to facilitate perpetual scroll.)\n   *\n   * @param {number} actualSlideNumber Number of the slide to evaluate\n   * @returns {number}\n   */\n  getLogicalSlideNumber(actualSlideNumber) {\n    let setSize = this.originalSlideCount;\n    let slideSetOfSlide = Math.ceil(actualSlideNumber / setSize);\n    let firstSlideOfSet = setSize *  slideSetOfSlide - (setSize - 1);\n    return actualSlideNumber - firstSlideOfSet + 1;\n  }\n\n  /**\n   * Move to the closest slide with the same logical number as the activated switch\n   *\n   * @param {Event} e The event\n   */\n  activateSwitch(e) {\n    let logicalSlideRequested = this.window.parseInt(e.target.querySelector('span').innerHTML, 10);\n    let logicalSlideCurrent = this.getLogicalSlideNumber(this.currentSlide);\n    let slideOffset = logicalSlideRequested - logicalSlideCurrent;\n\n    if (logicalSlideRequested === logicalSlideCurrent) {\n      return;\n    }\n\n    let callback = slideOffset < 0 ? this.previous : this.next;\n\n    for (let i = 0; i < Math.abs(slideOffset); i += 1) {\n      this.userInitiatedProgression(callback);\n    }\n  }\n\n  adjustTranslateForResize() {\n    let carouselWidth = window.getComputedStyle(this.$elm).width.match(/([0-9]+)px/)[1];\n    let currentSlide = this.currentSlide;\n    let expectedOffset = (currentSlide - 1) * carouselWidth * -1;\n    this.moveableStage.style.transform = 'translate(' + expectedOffset + 'px, 0)';\n  }\n\n  updateWidth() {\n    this.moveableStage.style.width = utils.adjustPxString(\n      this.window.getComputedStyle(this.$elm).width,\n      this.currentSlideCount,\n      'multiply');\n  }\n\n};\n","'use strict';\n\nmodule.exports = class ContentHeaderArticle {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n    this.$elm.classList.add('content-header-article--js');\n\n    // Should track SASS variable $bkpt-content-header--medium-width.\n    this.breakpointInPx = 768;\n    this.currentView = this.calcCurrentView(this.breakpointInPx);\n\n    this.authors = $elm.querySelectorAll('.content-header__author_list_item');\n    this.institutions = $elm.querySelectorAll('.content-header__institution_list_item');\n\n    this.hasToggleAuthor = false;\n    this.hasToggleInstitution = false;\n    this.hideAllExcessItems('author', this.authors);\n    this.hideAllExcessItems('institution', this.institutions);\n\n    let _this = this;\n    this.window.addEventListener('resize', () => {\n      let newView = _this.calcCurrentView(_this.breakpointInPx);\n      if (newView !== _this.currentView) {\n        _this.currentView = newView;\n        _this.handleAnyExcessItems('author', _this.authors);\n        _this.handleAnyExcessItems('institution', _this.institutions);\n      }\n    });\n\n  }\n\n  handleAnyExcessItems(itemType, items) {\n    let toggle = this.$elm.querySelector('.content-header__item_toggle');\n    if (toggle && toggle.innerHTML.indexOf('less') > -1 && this.currentView === 'wide') {\n      this.clearExcessMark(items);\n      this.toggleExcessItems(items);\n    } else {\n      this.clearExcessMark(items);\n      let excessItems = this.getExcessItems(itemType, items);\n      this.markAsExcess(excessItems);\n      this.toggleExcessItems(items);\n      this.markLastNonExcessItem(itemType, items);\n    }\n  }\n\n  /**\n   * Determine excess by itemType from items supplied and hides those.\n   *\n   * @param {string} itemType 'author' or 'institution'\n   * @param {DOMTokenList} items List of items to identify the excess within, and hide those\n   */\n  hideAllExcessItems(itemType, items) {\n    let excessItems = this.getExcessItems(itemType, items);\n    this.markAsExcess(excessItems);\n    this.toggleExcessItems(items);\n    this.addTrailingText(itemType, items);\n  }\n\n  /**\n   * Returns max number authors or institutions to be displayed by default at current screen width.\n   *\n   * Returns null if itemType is invalid.\n   *\n   * @param {string} itemType 'author' or 'institution'\n   * @returns {number|null} Number of the type of item to display by default at current screen width\n   */\n  getDefaultMaxItems(itemType) {\n    if (this.currentView === 'wide') {\n      if (itemType === 'author') {\n        return 16;\n      }\n\n      if (itemType === 'institution') {\n        return 10;\n      }\n\n    } else {\n      if (itemType === 'author') {\n        return 1;\n      }\n\n      if (itemType === 'institution') {\n        return 0;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns array of elements in excess of the default max items, or null if itemType invalid.\n   *\n   * The returned array is a subset of the list supplied, or empty if there are no excess items.\n   *\n   * @param {string} itemType 'author' or 'institution'\n   * @param {DOMTokenList} items List of items from which to identify the excess\n   * @returns {Array|null} Items in excess of the default maximum for the current screen width\n   */\n  getExcessItems(itemType, items) {\n    if (itemType !== 'author' && itemType !== 'institution') {\n      return null;\n    }\n\n    let defaultMaxItems = this.getDefaultMaxItems(itemType);\n    if (items.length > defaultMaxItems) {\n      return [].slice.call(items, defaultMaxItems);\n    }\n\n    return [];\n  }\n\n  /**\n   * Marks supplied list elements as excess.\n   *\n   * @param {Array} els The elements to mark as excess\n   */\n  markAsExcess(els) {\n    els.forEach(function ($el) {\n      $el.classList.add('excess-item');\n    });\n  }\n\n  /**\n   * Clears any excess mark from all elements in the supplied list.\n   *\n   * @param {DOMTokenList} els The elements to clear the excess mark from\n   */\n  clearExcessMark(els) {\n    [].forEach.call(els, function ($el) {\n      $el.classList.remove('excess-item');\n    });\n  }\n\n  /**\n   * Toggles the display of any excess items found in the supplied list of elements.\n\n   * @param {DOMTokenList} items The elements to inspect for excess items, and to toggle those found\n   */\n  toggleExcessItems(items) {\n    [].forEach.call(items, function (item) {\n      if (item.classList.contains('excess-item')) {\n        item.classList.add('visuallyhidden');\n      } else {\n        item.classList.remove('visuallyhidden');\n      }\n    });\n  }\n\n  /**\n   * Returns the name of the current view.\n   *\n   * @param {number} breakpoint The px viewport width that determines the view.\n   *\n   * @returns {string} the view name ('wide' or 'narrow').\n   */\n  calcCurrentView(breakpoint) {\n    return this.window.matchMedia('(min-width: ' + breakpoint + 'px)').matches ? 'wide' : 'narrow';\n  }\n\n  /**\n   * Marks the last shown non-excess item with particlular class (so not if showing last in list).\n   *\n   * @param {string} itemType 'author' or 'institution'\n   * @param {DOMTokenList} items List of items to act upon\n   */\n  markLastNonExcessItem(itemType, items) {\n    let lastShownIndex = null;\n    let foundLastShown = false;\n    [].forEach.call(items, function (item, i) {\n\n      // Clear old any obsolete determination of what's the last non-excess item.\n      items[i].classList.remove('content-header__' + itemType + '--last-non-excess');\n      if (item.classList.contains('excess-item') && !foundLastShown) {\n        lastShownIndex = i - 1;\n        foundLastShown = true;\n      }\n    });\n\n    if (lastShownIndex !== null && lastShownIndex > -1) {\n      let lastShown = items[lastShownIndex].querySelector('.content-header__' + itemType);\n      if (lastShown) {\n        lastShown.classList.add('content-header__' + itemType + '--last-non-excess');\n      }\n    }\n\n  }\n\n  /**\n   * Adds trailing text to the visible end of truncated author & institution lists & builds toggle.\n   *\n   * @param {string} itemType The type of items supplied\n   * @param {DOMTokenList} items The items to which to add the trailing text\n   */\n  addTrailingText(itemType, items) {\n    if (itemType === 'author' && items.length > this.getDefaultMaxItems('author')) {\n      if (!this.hasToggleAuthor) {\n        this.buildSeeMoreLessToggle('author');\n        this.hasToggleAuthor = true;\n      }\n\n    }\n\n    if (itemType === 'institution' && items.length > this.getDefaultMaxItems('institution')) {\n      if (!this.hasToggleInstitution) {\n        this.buildSeeMoreLessToggle('institution');\n        this.hasToggleInstitution = true;\n      }\n\n    }\n\n    this.markLastNonExcessItem(itemType, items);\n  }\n\n  /**\n   * Builds the show/hide toggle for excess authors & institutions.\n   */\n  buildSeeMoreLessToggle(itemType) {\n    // This toggle only required due to screen width constraints. All content already accessible as\n    // it's not being hidden in the first place. Hence an aria-hidden li, rather than an anchor.\n    // Should conform to https://www.w3.org/TR/wai-aria/states_and_properties#aria-hidden\n    let toggle = this.doc.createElement('li');\n    let toggleOnText = 'see&nbsp;all';\n    let toggleOffText = 'see&nbsp;less';\n    toggle.setAttribute('aria-hidden', 'true');\n    toggle.classList.add('content-header__item_toggle', 'content-header__item_toggle--' + itemType);\n    toggle.innerHTML = '&nbsp;&hellip;&nbsp;' + toggleOnText;\n    toggle.addEventListener('click', e => {\n      let target = e.target;\n      if (target.innerHTML.indexOf(toggleOnText) > -1) {\n        [].forEach.call(this.doc.querySelectorAll('.content-header__item_toggle'), item => {\n          item.innerHTML = '&nbsp;' + toggleOffText;\n        });\n        this.clearExcessMark(this.authors);\n        this.clearExcessMark(this.institutions);\n        this.toggleExcessItems(this.authors);\n        this.toggleExcessItems(this.institutions);\n      } else {\n        [].forEach.call(this.doc.querySelectorAll('.content-header__item_toggle'), item => {\n          item.innerHTML = '&nbsp;&hellip;&nbsp;' + toggleOnText;\n        });\n        this.hideAllExcessItems('author', this.authors);\n        this.hideAllExcessItems('institution', this.institutions);\n      }\n    });\n    this.$elm.querySelector('.content-header__' + itemType + '_list').appendChild(toggle);\n  }\n\n};\n","'use strict';\n\nconst utils = require('../libs/elife-utils')();\n\n/**\n * FragmentHandler mediates how the hash controls the opening of article sections.\n * It has no dedicated pattern template and its data-behaviour may live on any element, but note\n * that because it's a singleton only one will be instansiated.\n * @type {FragmentHandler}\n */\nmodule.exports = class FragmentHandler {\n\n  static isSingleton()  {\n    return true;\n  }\n\n  constructor($elm, _window = window, doc = document) {\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n    this.window.addEventListener('DOMContentLoaded', this.handleDomLoad.bind(this));\n  }\n\n  handleDomLoad(e) {\n    this.handleSectionOpeningViaHash(e);\n    this.window.addEventListener('hashchange', this.handleSectionOpeningViaHash.bind(this));\n  }\n\n  /**\n   * Indicates whether an HTML element with a given id is found as/within a specific chunk of html\n   *\n   * @param {String} id The id  of the HTML element to search for\n   * @param {HTMLElement} $section The element to search/search within\n   * @param {HTMLDocument} doc\n   * @param {Function} areElementsNested Handles determination of nesting\n   * @returns {boolean} true if element with id is $section, or is contained within $section\n   */\n  isIdOfOrWithinSection(id, $section, doc, areElementsNested) {\n    if (id === $section.id) {\n      return true;\n    }\n\n    let $fragWithId = doc.querySelector('#' + id);\n    return areElementsNested($section, $fragWithId);\n  }\n\n  /**\n   * Returns the id of the collapsed section containing the html element with idToFind, or null.\n   *\n   * @param {String} idToFind The id to search for\n   * @param {HTMLDocument} doc\n   * @param {Function} areElementsNested Handles determination of nesting\n   * @returns {String} The id of the collapsed section containing idToFind, or null\n   */\n  getIdOfCollapsedSection(idToFind, doc, areElementsNested) {\n    let collapsedSections = doc.querySelectorAll('.article-section--collapsed');\n    if (!collapsedSections) {\n      return null;\n    }\n\n    let $collapsedSectionContainingFrag;\n    [].forEach.call(collapsedSections, ($collapsedSection) => {\n      if (!$collapsedSectionContainingFrag) {\n        if (this.isIdOfOrWithinSection(idToFind, $collapsedSection, doc, areElementsNested)) {\n          $collapsedSectionContainingFrag = $collapsedSection;\n        }\n      }\n    });\n\n    if (!!$collapsedSectionContainingFrag) {\n      return $collapsedSectionContainingFrag.id;\n    }\n\n    return null;\n  }\n\n  /**\n   * Fires a custom expandsection event on the collapsed article section containing id from hash.\n   *\n   * @param e\n   * @returns {boolean} False if no hash found\n   */\n  handleSectionOpeningViaHash(e) {\n\n    // TODO: Code similar to that in Audioplayer.seekNewTime(), refactor out into common\n    let hash = '';\n\n    // event was hashChange\n    if (!!e.newURL) {\n      hash = e.newURL.substring(e.newURL.indexOf('#') + 1);\n    } else {\n      hash = this.window.location.hash.substring(1);\n    }\n\n    if (!hash) {\n      return false;\n    }\n\n    let idOfCollapsedSection = this.getIdOfCollapsedSection(hash, this.doc,\n                                                            utils.areElementsNested);\n    if (!!idOfCollapsedSection) {\n      // emit a section open event with the id of the section to open\n      // TODO: Used in several places, refactor out into common\n      let expandSection;\n      try {\n        expandSection = new CustomEvent('expandsection', { detail: hash });\n      } catch (e) {\n        // CustomEvent not supported, do it the old fashioned way\n        expandSection = document.createEvent('expandsection');\n        expandSection.initCustomEvent('expandsection', true, true, { detail: hash });\n      }\n\n      this.doc.querySelector('#' + idOfCollapsedSection).dispatchEvent(expandSection);\n\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = class MainMenu {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n  }\n\n  /**\n   * Moves main menu from default non-js DOM position into position required by js implementation.\n   */\n  moveWithinDom() {\n    this.$elm.classList.add('main-menu--js');\n    let $globalWrapper = this.doc.querySelector('.global-wrapper');\n    if (!!$globalWrapper) {\n      $globalWrapper.insertBefore(this.$elm, $globalWrapper.firstElementChild);\n    }\n  }\n\n  /**\n   * Indicates whether the main menu is currently open.\n   *\n   * @returns {boolean} true if the main menu is currently open\n   */\n  isOpen() {\n    return this.$elm.classList.contains('main-menu--shown');\n  }\n\n  /**\n   * Closes the main menu\n   */\n  close () {\n    this.$elm.classList.remove('main-menu--shown');\n    this.doc.querySelector('.global-wrapper').classList.remove('pull-offscreen-right');\n  }\n\n  /**\n   * Opens the main menu\n   */\n  open () {\n    this.$elm.classList.add('main-menu--shown');\n    this.doc.querySelector('.global-wrapper').classList.add('pull-offscreen-right');\n  }\n\n};\n","'use strict';\n\nmodule.exports = class Math {\n\n  constructor($elm, _window = window, doc = document) {\n    this.window = _window;\n    Math.loadDependencies(doc);\n  }\n\n  static loadDependencies(doc) {\n    if (!Math.dependenciesAlreadySetup(doc)) {\n      Math.setupProperties();\n      Math.load(doc);\n    }\n  }\n\n  static dependenciesAlreadySetup(doc) {\n    return !!doc.querySelector('script[src*=\"mathjax\"]');\n  }\n\n  static setupProperties() {\n    window.MathJax = {\n      'HTML-CSS': {\n        linebreaks: { automatic: true, width: '75% container' }\n      },\n      SVG: {\n        linebreaks: { automatic: true, width: '75% container' }\n      }\n    };\n  }\n\n  static setupResizeHandler() {\n    let resizeTimeout;\n    let resizeThrottler = function resizeThrottler() {\n      if (!resizeTimeout) {\n        resizeTimeout = setTimeout(function () {\n          resizeTimeout = null;\n\n          // TODO: change so exactly one rerender regardless of number of Math instances.\n          // Consider tacking at the same time as fragment handler.\n          if (!!this.window.MathJax) {\n            this.window.MathJax.Hub.Queue(['Rerender', this.window.MathJax.Hub]);\n          }\n        }, 300);\n      }\n    };\n\n    window.addEventListener('resize', resizeThrottler);\n  }\n\n  static load(doc) {\n    let script = doc.createElement('script');\n    script.type = 'text/javascript';\n    script.addEventListener('load', Math.setupResizeHandler);\n    script.src  = 'https://cdn.mathjax.org/mathjax/2.7-latest/MathJax.js?config=MML_HTMLorMML';\n    doc.querySelector('body').appendChild(script);\n  }\n\n};\n","'use strict';\nmodule.exports = class MediaChapterListingItem {\n\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      console.warn('No element provided');\n      return;\n    }\n\n    console.log('Initialising Chapter listing item...');\n\n    this.$elm = $elm;\n    this.startTime = $elm.dataset.startTime;\n    if (!this.startTime || isNaN(this.startTime) || this.startTime < 0) {\n      return;\n    }\n\n    this.window = _window;\n    this.document = doc;\n\n    // When ready, AudioPlayer dispatches a custom event 'playerReady' on window, that supplies that\n    // player's html element id.\n    _window.addEventListener('playerReady', this.listenForChapterChange.bind(this));\n    this.$link = this.createLink(doc, this.$elm, this.startTime);\n    this.setupEventHandlers(this.$link);\n\n  }\n\n  listenForChapterChange (e) {\n    let $player = this.document.querySelector('#' + e.detail);\n    if (!!$player) {\n      $player.addEventListener('chapterChanged', this.indicateChapterChanged.bind(this));\n    }\n  }\n\n  createLink(document, $rootElm, startTime) {\n    let $title = $rootElm.querySelector('.teaser__header_text');\n    if (!$title) {\n      return;\n    }\n\n    let titleText;\n    let $existingLink;\n    try {\n      $existingLink = $title.querySelector('.teaser__header_text_link');\n      titleText = $existingLink.innerHTML;\n      $existingLink.parentNode.removeChild($existingLink);\n    } catch (e) {\n      titleText = $title.innerHTML;\n    }\n\n    let $link = document.createElement('a');\n    $link.innerHTML = titleText;\n    $link.setAttribute('href', '#' + startTime);\n    $link.classList.add('teaser__header_text_link');\n    $title.innerHTML = '';\n    $title.appendChild($link);\n    return $link;\n  }\n\n  indicateChapterChanged(e) {\n    let currentChapterNumber = e.detail;\n    if (currentChapterNumber === this.window.parseInt(this.$elm.dataset.chapterNumber)) {\n      this.$elm.classList.add('current-chapter');\n    } else {\n      this.$elm.classList.remove('current-chapter');\n    }\n  }\n\n  setupEventHandlers($link) {\n    $link.addEventListener('chapterChanged', this.indicateChapterChanged);\n  }\n\n};\n","'use strict';\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = class SearchBox {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.$container = $elm.querySelector('fieldset');\n    this.$form = $elm.querySelector('form');\n    this.$input = $elm.querySelector('input[type=\"search\"]');\n    this.$limit = $elm.querySelector('input[type=\"checkbox\"]');\n    this.$elm = $elm;\n    this.$searchButton = $elm.querySelector('button[type=\"submit\"]');\n    this.$resetButton = $elm.querySelector('button[type=\"reset\"]');\n    this.$inner = $elm.querySelector('.search-box__inner');\n\n    // Check there's a search input field, if not everything else is pointless.\n    if (!this.$input) {\n      return;\n    }\n\n    // TODO: Remove if not ultimately useful.\n    this.isSearchLimited = this.$limit && this.$limit.checked;\n\n    this.$elm.classList.add('search-box--js');\n\n    // setup\n    this.$form.setAttribute('autocomplete', 'off');\n\n    if (!doc.querySelector('.search-box__output')) {\n      this.$output = doc.createElement('div');\n      this.$output.innerHTML = '';\n      this.$output.classList.add('search-box__output');\n      this.$output.addEventListener('keyup', e => {\n        SearchBox.handleKeyEntry(e, this);\n      });\n      this.$output.addEventListener('click', e => {\n        this.useSuggestion(e.target);\n      });\n      this.$inner.appendChild(this.$output);\n    }\n\n    this.keywords = [];\n\n    // events\n    this.$resetButton.addEventListener('click', this.reset.bind(this));\n    this.$input.addEventListener('keyup', e => {\n      SearchBox.handleKeyEntry(e, this);\n    });\n    this.$input.addEventListener('paste', this.showResetButton.bind(this));\n\n    // TODO: Remove this test data when decided how to populate this list of keywords with real data\n    SearchBox.setKeywords([\n                            'Xiao-Dong Li', 'Zhijian J Chen', 'Cell biology',\n                           'Immunology', 'bacteria',\n                          ], this);\n  }\n\n  /**\n   * Handles the reset button being pressed.\n   */\n  reset() {\n    this.hideResetButton();\n    if (this.$output) {\n      this.$output.innerHTML = '';\n    }\n\n    this.$input.focus();\n  }\n\n  /**\n   * Hides the reset button.\n   */\n  hideResetButton() {\n    this.$elm.classList.remove('search-box--populated');\n  }\n\n  /**\n   * Shows the reset button.\n   */\n  showResetButton() {\n    this.$elm.classList.add('search-box--populated');\n  }\n\n  /**\n   * Responds to the keyCode of a KeyboardEvent (used on the input field and suggestions).\n   *\n   * Takes care not to trap the tab character. Accessibility!\n   * Down arrow (keyCode 40): go to the next suggestion.\n   * Up arrow (keyCode 38): go to the previous suggestion.\n   * Return (keyCode 13): put the text of the current suggestion into the search box\n   * Any other key: use it to filter keywords; also show/hide reset button.\n   *\n   * @param {KeyboardEvent} e The event to respond to\n   * @param {SearchBox} searchBox Calling object (injected to make method more testable)\n   */\n  static handleKeyEntry(e, searchBox) {\n    let current = e.target;\n    if (e.keyCode && e.keyCode !== 9) {\n      switch (e.keyCode) {\n      case 40:\n        searchBox.nextSuggestion(current);\n        break;\n      case 38:\n        searchBox.prevSuggestion(current);\n        break;\n      case 13:\n        searchBox.useSuggestion(current);\n        break;\n      default:\n        searchBox.display(searchBox.filterKeywordsBySearchTerm(SearchBox.getKeywords(searchBox),\n                                                       searchBox.$input.value), searchBox.$output);\n        if (searchBox.$input.value.length > 0) {\n          searchBox.showResetButton();\n        } else {\n          searchBox.hideResetButton();\n        }\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Selects the search suggestion element after the current one.\n   *\n   * If already on the last one, loop to the beginning and select the input field.\n   *\n   * @param {HTMLElement} current The search suggestion or input field currently with focus\n   */\n  nextSuggestion(current) {\n    if (!this.$output) {\n      return;\n    }\n\n    if (current === this.$input) {\n      this.$output.querySelector('ul li:first-child').focus();\n    } else if (!!current.nextElementSibling) {\n      current.nextElementSibling.focus();\n    } else {\n      this.$input.focus();\n    }\n  }\n\n  /**\n   * Selects the search suggestion element before the current one.\n   *\n   * If already on the input field, loop to the end and select the last one.\n   *\n   * @param {HTMLElement} current The search suggestion or input field currently with focus\n   */\n  prevSuggestion(current) {\n    if (!this.$output) {\n      return;\n    }\n\n    if (current === this.$input) {\n      this.$output.querySelector('ul li:last-child').focus();\n    } else if (!!current.previousElementSibling) {\n      current.previousElementSibling.focus();\n    } else {\n      this.$input.focus();\n    }\n  }\n\n  /**\n   * Copy the display text of the current suggestion into the search field.\n   *\n   * @param {HTMLElement} target The element containing the text to use\n   */\n  useSuggestion(target) {\n    this.$input.value = target.innerHTML.replace(/<\\/?strong>/g, '');\n    if (this.$output) {\n      this.$output.innerHTML = '';\n      if (this.$input.value.length) {\n        this.$form.submit();\n      }\n    }\n  }\n\n  /**\n   * Gets the keywords for the supplied searchBox.\n   *\n   * @param {SearchBox} searchBox The injected search box\n   */\n  static getKeywords(searchBox) {\n    return searchBox.keywords;\n  }\n\n  /**\n   * Sets the keywords for the supplied searchBox.\n   *\n   * @param {Array} keywords The keywords for the searchBox\n   * @param {SearchBox} searchBox The injected search box\n   */\n  static setKeywords(keywords, searchBox) {\n    searchBox.keywords = keywords;\n  }\n\n  /**\n   * Filter keywords by the contents of the search field.\n   *\n   * @param {string} searchTerm The search term to filter the keywords by\n   * @param {Array} keywords The keywords to filter\n   */\n  filterKeywordsBySearchTerm(keywords, searchTerm) {\n    let matches;\n    if (searchTerm) {\n      matches = keywords.filter(keyword => keyword.toLowerCase().indexOf(\n                                                                  searchTerm.toLowerCase()) !== -1);\n\n      matches.sort();\n      for (let i = 0; i < matches.length; i += 1) {\n        matches[i] = SearchBox.embolden(matches[i], searchTerm);\n      }\n    }\n\n    return matches;\n  }\n\n  /**\n   * Returns phrase with specified (case insensitive) snippet emboldened.\n   *\n   * @param {string} phrase The phrase containing the text to embolden\n   * @param {string} snippet The substring of phrase to embolden\n   * @returns {string} The phrase with the snippet emboldened\n   */\n  static embolden(phrase, snippet) {\n    // Don't nest emboldening elements.\n    if (snippet.indexOf('<strong>') > -1) {\n      return phrase;\n    }\n\n    let snippetRx = new RegExp(snippet, 'i');\n    let toEmbolden = phrase.match(snippetRx) ? phrase.match(snippetRx)[0] : null;\n    if (!toEmbolden) {\n      return phrase;\n    }\n\n    return phrase.replace(toEmbolden, `<strong>${toEmbolden}</strong>`);\n  }\n\n  /**\n   * Update the search suggestions based on matches found.\n   *\n   * @param {Array} matches The matches found\n   * @param {HTMLElement} $output Element to contain the display\n   */\n  display(matches, $output) {\n    let outputString = '';\n\n    if ($output) {\n      $output.innerHTML = '';\n      this.nudgeOutputVertically('-47px');\n\n      if (matches && matches.length) {\n        matches.forEach(match => {\n          outputString += `<li tabindex=\"0\" class=\"search-box__suggestion\">${match}</li>`;\n        });\n\n        outputString = `<ul>${outputString}</ul>`;\n        $output.innerHTML = outputString;\n      }\n    }\n\n  }\n\n  /**\n   * Uses css transform to translate $output in the vertical axis.\n   *\n   * @param posnInPx The vertical offset to apply\n   */\n  nudgeOutputVertically(posnInPx) {\n    let posn;\n    if (typeof posnInPx === 'string' && posnInPx.indexOf('px') === posnInPx.length - 2) {\n      posn = posnInPx;\n    } else if (!isNaN(posnInPx)) {\n      posn = posnInPx + 'px';\n    }\n\n    utils.updateElementTranslate(this.$output, [0, posn]);\n  }\n\n  /**\n   * Toggle the flag that limits the search.\n   */\n  toggleSearchLimiting() {\n    this.isSearchLimited = !this.isSearchLimited;\n  }\n\n};\n","'use strict';\n\nmodule.exports = class SelectNav {\n\n  constructor($elm) {\n    if (!$elm) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.$elm.classList.add('select-nav--js');\n    this.$elm.querySelector('select').addEventListener('change', this.triggerSubmit.bind(this));\n  }\n\n  triggerSubmit() {\n    this.$elm.submit();\n  }\n\n};\n","'use strict';\nvar utils = require('../libs/elife-utils')();\n\nmodule.exports = class SiteHeader {\n\n  // Passing window and document separately allows for independent mocking of window in order\n  // to test feature support fallbacks etc.\n  constructor($elm, _window = window, doc = document) {\n    if (!$elm) {\n      return;\n    }\n\n    this.$elm = $elm;\n    this.window = _window;\n    this.doc = doc;\n\n    let SearchBox = require('./SearchBox');\n    let $searchBoxEl = $elm.querySelector('[data-behaviour=\"SearchBox\"]');\n    this.searchBox = new SearchBox($searchBoxEl, this.window, doc);\n    var searchToggle = $elm.querySelector('[rel=\"search\"]');\n    if (!!searchToggle) {\n      this.searchToggle = searchToggle.parentNode;\n      this.searchToggle.addEventListener('click', this.toggleSearchBox.bind(this));\n    }\n\n    this.$pageOverlay = null;\n\n    // N.B. $mainMenu is not part of this component's HTML hierarchy.\n    var mainMenu = doc.querySelector('#mainMenu');\n    if (!!mainMenu) {\n      let MainMenu = require('./MainMenu');\n      this.mainMenu = new MainMenu(mainMenu);\n\n      this.$mainMenuToggle = this.$elm.querySelector('a[href=\"#mainMenu\"]');\n      if (!!this.$mainMenuToggle) {\n        this.mainMenu.moveWithinDom();\n        this.$mainMenuToggle.addEventListener('click', this.toggleMainMenu.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Toggles display of the main menu.\n   */\n  toggleMainMenu(e) {\n    if (this.mainMenu.isOpen()) {\n      this.mainMenu.close();\n      this.window.removeEventListener('keyup', this.checkForMenuClose.bind(this));\n      this.doc.querySelector('.global-inner').\n               removeEventListener('click', this.checkForMenuClose.bind(this));\n    } else {\n      this.mainMenu.open();\n      this.window.addEventListener('keyup', this.checkForMenuClose.bind(this));\n      this.doc.querySelector('.global-inner').\n               addEventListener('click', this.checkForMenuClose.bind(this));\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  checkForMenuClose(e) {\n    if (e.keyCode === 27 || e.type === 'click') {\n      this.mainMenu.close();\n    }\n  }\n\n  /**\n   * Toggles display of the search box.\n   *\n   * @param {Event} e The event causing the toggle to occur\n   */\n  toggleSearchBox(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.searchBoxIsOpen()) {\n      this.closeSearchBox();\n    } else {\n      this.openSearchBox();\n    }\n  }\n\n  /**\n   * Returns true if the search box is currently displayed.\n   *\n   * @returns {boolean} True if the search box is open\n   */\n  searchBoxIsOpen() {\n    return this.searchBox.$elm.classList.contains('search-box--shown');\n  }\n\n  /**\n   * Closes the search box.\n   */\n  closeSearchBox() {\n    this.searchBox.$elm.classList.remove('search-box--shown');\n    utils.updateElementTranslate(this.searchBox.$elm, [0, '-40px']);\n    if (this.searchBox.$output) {\n      this.searchBox.$output.innerHTML = '';\n    }\n\n    this.searchBox.$input.blur();\n    this.window.removeEventListener('keyup', this.checkForClose.bind(this));\n    this.window.removeEventListener('click', this.checkForClose.bind(this));\n    this.hidePageOverlay();\n  }\n\n  /**\n   * Decides whether to close the search box, based on the supplied event.\n   *\n   * @param e The KeyboardEvent provoking the check.\n   */\n  checkForClose(e) {\n    if (e.keyCode && e.keyCode === 27 ||\n        (e.type === 'click' && !utils.areElementsNested(this.searchBox.$elm, e.target))) {\n      this.closeSearchBox();\n    }\n  }\n\n  /**\n   * Opens the search box.\n   */\n  openSearchBox() {\n    let myHeight = this.window.getComputedStyle(this.$elm).height;\n    let adjustment = 20;\n    let offsetY = utils.adjustPxString(myHeight, adjustment, 'add');\n\n    // This is set in the site-header.scss.\n    let transitionDurationInMs = 150;\n    utils.updateElementTranslate(this.searchBox.$elm, [0, offsetY]);\n    utils.invertPxString(this.window.getComputedStyle(this.searchBox.$container).height);\n    this.searchBox.$elm.classList.add('search-box--shown');\n    this.window.addEventListener('keyup', this.checkForClose.bind(this));\n    this.window.addEventListener('click', this.checkForClose.bind(this));\n\n    this.window.setTimeout(() => {\n\n      // blur before focus forces the focus, a simple focus doesn't always behave as expected.\n      this.searchBox.$input.blur();\n      this.searchBox.$input.focus();\n    }, transitionDurationInMs);\n    this.showPageOverlay();\n  }\n\n  /**\n   * Creates the page overlay.\n   *\n   */\n  createPageOverlay() {\n    let className = 'overlay--semi-white';\n\n    if (!this.$pageOverlay) {\n      this.$pageOverlay = this.doc.createElement('div');\n      this.$pageOverlay.classList.add(className);\n    }\n\n    let $target = this.doc.querySelector('.global-inner');\n    $target.insertBefore(this.$pageOverlay,\n                         this.doc.querySelector('.site-header').nextElementSibling);\n  }\n\n  /**\n   * Shows the page overlay.\n   */\n  showPageOverlay() {\n    if (!this.$pageOverlay) {\n      this.createPageOverlay();\n    }\n\n    this.$pageOverlay.style.display = 'block';\n    this.$pageOverlay.style.height = this.doc.querySelector('.global-inner')\n                                         .getBoundingClientRect().height + 'px';\n  }\n\n  /**\n   * Hides the page overlay.\n   */\n  hidePageOverlay() {\n    this.$pageOverlay.style.display = 'none';\n  }\n\n};\n","'use strict';\n\nmodule.exports = class ViewSelector {\n\n  constructor($elm, _window = window, doc = document) {\n\n    if (!$elm) {\n      return;\n    }\n\n    this.window = _window;\n    this.doc = doc;\n    this.$elm = $elm;\n    this.$jumpLinks = this.$elm.querySelector('.view-selector__jump_links');\n    this.$jumpLinksToggle = this.$elm.querySelector('.view-selector__jump_links_header');\n    this.cssFixedClassName = 'view-selector--fixed';\n\n    this.mainTarget = this.doc.querySelector('[role=\"main\"]');\n\n    // matches top padding in scss\n    let topSpaceWhenFixed = 30;\n\n    this.elmYOffset = this.$elm.offsetTop - topSpaceWhenFixed;\n    this.window.addEventListener('scroll', this.handleScroll.bind(this));\n    this.$jumpLinksToggle.addEventListener('click', this.toggleJumpLinks.bind(this));\n    this.toggleJumpLinks();\n  }\n\n  handleScroll() {\n\n    // If it's position is fixed\n    if (this.$elm.classList.contains(this.cssFixedClassName)) {\n\n      // Allow it to scroll again if it could keep its position & not scroll off top of screen\n      if (this.window.pageYOffset < this.elmYOffset) {\n        this.$elm.classList.remove(this.cssFixedClassName);\n        return;\n      }\n\n      // Allow it to scroll again if it would otherwise over-/under-lay following element\n      let bottomOfMain = this.mainTarget.getBoundingClientRect().bottom;\n      if (bottomOfMain < this.$elm.offsetHeight) {\n        let amountToNudgeUp = bottomOfMain - this.$elm.offsetHeight;\n        this.$elm.style.top = amountToNudgeUp + 'px';\n        return;\n      }\n\n      // Ensure top of component is not off top of screen once bottom of main is off screen bottom\n      // Safety net: required because a fast scroll may prevent all code running as desired.\n      if (bottomOfMain >= this.window.innerHeight) {\n        this.$elm.style.top = '0px';\n      }\n\n      return;\n    }\n\n    // Otherwise fix its position if it would otherwise scroll off the top of the screen\n    if (this.window.pageYOffset >= this.elmYOffset) {\n      this.$elm.classList.add(this.cssFixedClassName);\n      this.$elm.style.top = '0px';\n    }\n\n  }\n\n  toggleJumpLinks() {\n    this.$jumpLinks.classList.toggle('visuallyhidden');\n    this.$jumpLinksToggle.classList.toggle('view-selector__jump_links_header--closed');\n    this.handleScroll();\n\n  }\n\n};\n","\nmodule.exports = class ViewerModal {\n\n  constructor($elm) {\n    this.$elm = $elm;\n    this.$prev = document.createElement('div');\n    this.$next = document.createElement('div');\n\n    // build the modal\n    this.build();\n\n    // events\n    this.$prev.addEventListener('click', this.prev);\n    this.$next.addEventListener('click', this.next);\n  }\n\n  build() {\n    //\n  }\n\n  prev(e) {\n    e.preventDefault();\n  }\n\n  next(e) {\n    e.preventDefault();\n  }\n\n  close() {\n    //\n  }\n\n};\n","module.exports = () => {\n  'use strict';\n\n  /**\n   * Builds and returns specified HTML element, optionally adding it to the DOM.\n   *\n   * @param {string} elName Name of the HTML element to build\n   * @param {Array} [cssClasses] CSS class name(s) to set on the element\n   * @param {string} [textContent] Textual content of the element\n   * @param {string|Element} [parent] Parent element to attach to\n   * @param {string|Element|boolean} [attachBefore] Following sibling (1st if true, last if falsey)\n   *\n   * @returns {Element}\n   */\n  function buildElement(elName, cssClasses, textContent, parent, attachBefore) {\n\n    var $el = document.createElement(elName);\n    var $parent = typeof parent === 'string' ? document.querySelector(parent)\n      : parent;\n\n    // Work out what the new element's following sibling will be, based on value of attachBefore.\n    var $followingSibling = (function () {\n\n      if (!!attachBefore) {\n\n        if (typeof attachBefore === 'boolean') {\n          return $parent.firstElementChild;\n\n        } else if (typeof attachBefore === 'string') {\n          return document.querySelector(attachBefore);\n\n        } else if (attachBefore instanceof HTMLElement) {\n          return attachBefore;\n\n        }\n      }\n    }());\n\n    if (Array.isArray(cssClasses)) {\n      cssClasses.forEach(cssClass => {\n        $el.classList.add(cssClass);\n      });\n    }\n\n    if (textContent) {\n      $el.innerHTML = textContent;\n    }\n\n    if (!!$parent) {\n      // TODO: Handle what happens if following sibling is not a child of parent\n      if (!!$followingSibling) {\n        $parent.insertBefore($el, $followingSibling);\n      } else {\n        $parent.appendChild($el);\n      }\n    }\n\n    return $el;\n  }\n\n  var uniqueIds = (function uniqueIds() {\n\n    class UniqueIdentifiers {\n\n      constructor () {\n        this.used = [];\n      }\n\n      isValid(candidate, document) {\n        // Compulsory check that id is unique to this object's knowledge.\n        if (this.used.indexOf(candidate) > -1) {\n          return false;\n        }\n\n        // Optional check to see if id is unique in the DOM.\n        if (!!document) {\n          if (!!document.querySelector &&\n              typeof document.querySelector === 'function' &&\n              document.querySelector('#' + candidate)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      /**\n       * Gets a unique id with optional prefix.\n       *\n       * @param {string} [prefix] Prefix to use for the id\n       * @param {HTMLDocument} [document] Enables checking for the id's uniqueness within the DOM\n       * @returns {string}\n       */\n      get(prefix, document) {\n        var _prefix = '' + prefix || 'default_';\n        var random = ('' + Math.random()).replace(/\\./, '');\n        var candidate = _prefix + random;\n        if (this.isValid(candidate, document)) {\n          this.used.push(candidate);\n          return candidate;\n        }\n\n        this.get(prefix, document);\n      }\n    }\n\n    return new UniqueIdentifiers();\n  }());\n\n  /**\n   * Updates the CSS transform's translate function on the element in a vendor-prefix-aware fashion.\n   *\n   * Because of the way CSS transformations are combined into a matrix, this may not work\n   * as expected if other CSS transformations are also applied to the same element.\n   *\n   * @param {HTMLElement} $el The element to apply the transformation to.\n   * @param {Array} offset The offset for both axes, expressed as [x, y], e.g. [0, '20px']\n   */\n  function updateElementTranslate($el, offset) {\n    if (!($el instanceof HTMLElement && Array.isArray(offset))) {\n      return false;\n    }\n\n    function calcOffset(value) {\n      if (!value) {\n        return '0px';\n      }\n\n      if (typeof value === 'number') {\n        return value + 'px';\n      }\n\n      if (typeof value === 'string') {\n        value += 'px';\n        return value.replace(/((px)+)$/, 'px');\n      }\n    }\n\n    let offsetX = calcOffset(offset[0]);\n    let offsetY = calcOffset(offset[1]);\n\n    let props = ['webkitTransform', 'mozTransform', 'msTransform', 'oTransform', 'transform'];\n    props.forEach((prop) => {\n      // Only set the vendor prefixed properties where they are supported\n      if ($el.style[prop] !== undefined) {\n        $el.style[prop] = 'translate(' + offsetX + ', ' + offsetY + ')';\n      }\n    });\n  }\n\n  function _getValueFromPxString(pxString) {\n    if (pxString === '0') {\n      return 0;\n    }\n\n    return parseInt(pxString.match(/([-0-9.]+)px/)[1], 10);\n  }\n\n  function _getZeroAwarePxStringFromValue(value) {\n    if (value === 0) {\n      return '' + value;\n    }\n\n    return value + 'px';\n  }\n\n  /**\n   * Add a quantity to a px amount expressed as a string, and return new string with updated value.\n   *\n   * For example: adjustPxString('97px', 8) returns '105px'\n   *\n   * @param {String} pxString The string representing the original quantity, e.g. '97px'\n   * @param adjustment The numeric adjustment to make, e.g. 8\n   * @param operation\n   * @returns {string} The modified value, as a string, e.g.: '105px'\n   */\n  function adjustPxString(pxString, adjustment, requestedOperation) {\n    let originalSize = _getValueFromPxString(pxString);\n    let adjustedSize = originalSize;\n    let operation = 'add';\n    if (['subtract', 'multiply', 'divide'].indexOf(requestedOperation) > -1) {\n      operation = requestedOperation;\n    }\n\n    switch (operation) {\n    case 'add':\n      adjustedSize = originalSize + adjustment;\n      break;\n    case 'subtract':\n      adjustedSize = originalSize - adjustment;\n      break;\n    case 'multiply':\n      adjustedSize = originalSize * adjustment;\n      break;\n    case 'divide':\n      adjustedSize = originalSize / adjustment;\n      break;\n    default:\n      break;\n    }\n    return _getZeroAwarePxStringFromValue(adjustedSize);\n  }\n\n  /**\n   * Invert the px amount expressed as a string, and return new string with inverted value.\n   *\n   * For example: invertPxString('97px') returns '-97px'\n   *\n   * @param {String} pxString The string representing the original quantity, e.g. '97px'\n   * @returns {string} The modified value, as a string, e.g.: '-97px'\n   */\n  function invertPxString(pxString) {\n    let originalSize = _getValueFromPxString(pxString);\n    let adjustedSize = originalSize * -1;\n    return _getZeroAwarePxStringFromValue(adjustedSize);\n  }\n\n  /**\n   * Returns true if $prospectiveDescendant is, or is a descendant of $prospectiveParent.\n   *\n   * @param {Node} $prospectiveParent el to test as a parent of the $prospectiveDescendant\n   * @param {Node} $prospectiveDescendant el to test as descendant of the $prospectiveParent\n   * @returns {boolean} Whether the $prospectiveDescendant is, or descends from $prospectiveParent\n   */\n  function areElementsNested($prospectiveParent, $prospectiveDescendant) {\n    if (!($prospectiveParent instanceof Node && $prospectiveDescendant instanceof Node)) {\n      return false;\n    }\n\n    let relationship = $prospectiveParent.compareDocumentPosition($prospectiveDescendant);\n    return !!(\n      relationship & $prospectiveParent.DOCUMENT_POSITION_CONTAINED_BY || relationship === 0\n    );\n  }\n\n  /**\n   * Returns whether the display is considered to have a high pixel density ratio.\n   *\n   * @param window\n   * @returns {boolean} true if dpr >= 2, false if lower, or unknown.\n   */\n  function isHighDpr(window) {\n    if (!!window.devicePixelRatio) {\n      return window.devicePixelRatio >= 2;\n    }\n\n    return false;\n  }\n\n  return {\n    adjustPxString: adjustPxString,\n    areElementsNested: areElementsNested,\n    buildElement: buildElement,\n    invertPxString: invertPxString,\n    isHighDpr: isHighDpr,\n    uniqueIds: uniqueIds,\n    updateElementTranslate: updateElementTranslate,\n  };\n\n};\n","'use strict';\n\n// Base level of feature support needed for the js loaded in this file.\n// Consider AJAXing in the rest if the test passes.\nif (window.localStorage && document.querySelector &&\n       window.addEventListener && !!(document.createElement('div')).classList) {\n\n  document.querySelector('html').classList.add('js');\n\n  let Components = {};\n\n  // import modules into the list of Components.\n  Components.AllSubjectsListLink = require('./components/AllSubjectsListLink');\n  Components.ArticleDownloadLinksList = require('./components/ArticleDownloadLinksList');\n  Components.ArticleSection = require('./components/ArticleSection');\n  Components.AudioPlayer = require('./components/AudioPlayer');\n  Components.BackgroundImage = require('./components/BackgroundImage');\n  Components.Carousel = require('./components/Carousel');\n  Components.ContentHeaderArticle = require('./components/ContentHeaderArticle');\n  Components.FragmentHandler = require('./components/FragmentHandler');\n  Components.MainMenu = require('./components/MainMenu');\n  Components.Math = require('./components/Math');\n  Components.MediaChapterListingItem = require('./components/MediaChapterListingItem');\n  Components.SearchBox = require('./components/SearchBox');\n  Components.SelectNav = require('./components/SelectNav');\n  Components.SiteHeader = require('./components/SiteHeader');\n  Components.ViewerModal = require('./components/ViewerModal');\n  Components.ViewSelector = require('./components/ViewSelector');\n\n  // App\n  let Elife = function Elife() {\n\n    let singletons = (function () {\n      let registered = [];\n\n      function isRegistered(componentName) {\n        return registered.indexOf(componentName) > -1;\n      }\n\n      function register(componentName) {\n        registered.push(componentName);\n      }\n\n      return {\n        isRegistered: isRegistered,\n        register: register,\n      };\n\n    }());\n\n    function initialiseComponent($component) {\n      // When present, data-behaviour contains a space-separated list of handlers for that component\n      let handlers = $component.getAttribute('data-behaviour').trim().split(' ');\n      for (let i = 0; i < handlers.length; i += 1) {\n        let handler = handlers[i];\n        if (!singletons.isRegistered(handler)) {\n          if (!!Components[handler] && typeof Components[handler] === 'function') {\n            new Components[handler]($component, window, window.document);\n          }\n\n          if (typeof Components[handler].isSingleton === 'function' &&\n              Components[handler].isSingleton()) {\n            singletons.register(handler);\n          }\n        }\n      }\n    }\n\n    let components = document.querySelectorAll('[data-behaviour]');\n    if (components) {\n      [].forEach.call(components, initialiseComponent);\n    }\n\n  };\n\n  new Elife();\n}\n\n"]}